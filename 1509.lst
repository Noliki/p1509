

Microchip Technology PIC PRO Macro Assembler V1.12 build 49521 
                                                                                               Thu May 16 13:40:26 2013

HI-TECH Software Omniscient Code Generator (PRO mode) build 49521
     1                           	processor	16F1509
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text404,local,class=CODE,merge=1,delta=2
    14                           	psect	text405,local,class=CODE,merge=1,delta=2
    15                           	psect	pa_nodes,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0013                     	;# 
    35  0015                     	;# 
    36  0016                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001C                     	;# 
    44  008C                     	;# 
    45  008D                     	;# 
    46  008E                     	;# 
    47  0091                     	;# 
    48  0092                     	;# 
    49  0093                     	;# 
    50  0095                     	;# 
    51  0096                     	;# 
    52  0097                     	;# 
    53  0099                     	;# 
    54  009A                     	;# 
    55  009B                     	;# 
    56  009B                     	;# 
    57  009C                     	;# 
    58  009D                     	;# 
    59  009E                     	;# 
    60  009F                     	;# 
    61  010C                     	;# 
    62  010D                     	;# 
    63  010E                     	;# 
    64  0111                     	;# 
    65  0112                     	;# 
    66  0113                     	;# 
    67  0114                     	;# 
    68  0115                     	;# 
    69  0116                     	;# 
    70  0117                     	;# 
    71  0118                     	;# 
    72  0119                     	;# 
    73  011D                     	;# 
    74  018C                     	;# 
    75  018D                     	;# 
    76  018E                     	;# 
    77  0191                     	;# 
    78  0191                     	;# 
    79  0192                     	;# 
    80  0193                     	;# 
    81  0193                     	;# 
    82  0194                     	;# 
    83  0195                     	;# 
    84  0196                     	;# 
    85  0197                     	;# 
    86  0199                     	;# 
    87  019A                     	;# 
    88  019B                     	;# 
    89  019C                     	;# 
    90  019D                     	;# 
    91  019E                     	;# 
    92  019F                     	;# 
    93  020C                     	;# 
    94  020D                     	;# 
    95  0211                     	;# 
    96  0211                     	;# 
    97  0212                     	;# 
    98  0212                     	;# 
    99  0213                     	;# 
   100  0213                     	;# 
   101  0214                     	;# 
   102  0214                     	;# 
   103  0215                     	;# 
   104  0215                     	;# 
   105  0215                     	;# 
   106  0216                     	;# 
   107  0216                     	;# 
   108  0217                     	;# 
   109  0217                     	;# 
   110  0391                     	;# 
   111  0392                     	;# 
   112  0393                     	;# 
   113  0394                     	;# 
   114  0395                     	;# 
   115  0396                     	;# 
   116  0498                     	;# 
   117  0498                     	;# 
   118  0499                     	;# 
   119  049A                     	;# 
   120  049B                     	;# 
   121  049B                     	;# 
   122  049C                     	;# 
   123  049E                     	;# 
   124  049F                     	;# 
   125  0611                     	;# 
   126  0612                     	;# 
   127  0613                     	;# 
   128  0613                     	;# 
   129  0614                     	;# 
   130  0615                     	;# 
   131  0616                     	;# 
   132  0616                     	;# 
   133  0617                     	;# 
   134  0618                     	;# 
   135  0619                     	;# 
   136  0619                     	;# 
   137  061A                     	;# 
   138  061B                     	;# 
   139  061C                     	;# 
   140  061C                     	;# 
   141  0691                     	;# 
   142  0692                     	;# 
   143  0693                     	;# 
   144  0694                     	;# 
   145  0695                     	;# 
   146  0F0F                     	;# 
   147  0F10                     	;# 
   148  0F11                     	;# 
   149  0F12                     	;# 
   150  0F13                     	;# 
   151  0F14                     	;# 
   152  0F15                     	;# 
   153  0F16                     	;# 
   154  0F17                     	;# 
   155  0F18                     	;# 
   156  0F19                     	;# 
   157  0F1A                     	;# 
   158  0F1B                     	;# 
   159  0F1C                     	;# 
   160  0F1D                     	;# 
   161  0F1E                     	;# 
   162  0F1F                     	;# 
   163  0F20                     	;# 
   164  0F21                     	;# 
   165  0F22                     	;# 
   166  0F23                     	;# 
   167  0F24                     	;# 
   168  0F25                     	;# 
   169  0F26                     	;# 
   170  0F27                     	;# 
   171  0F28                     	;# 
   172  0F29                     	;# 
   173  0F2A                     	;# 
   174  0F2B                     	;# 
   175  0F2C                     	;# 
   176  0F2D                     	;# 
   177  0F2E                     	;# 
   178  0F2F                     	;# 
   179  0F8C                     	;# 
   180  0F8D                     	;# 
   181  0F91                     	;# 
   182  0F95                     	;# 
   183  0F96                     	;# 
   184  0F97                     	;# 
   185  0F9C                     	;# 
   186  0F9D                     	;# 
   187  0F9E                     	;# 
   188  0FE3                     	;# 
   189  0FE4                     	;# 
   190  0FE5                     	;# 
   191  0FE6                     	;# 
   192  0FE7                     	;# 
   193  0FE8                     	;# 
   194  0FE9                     	;# 
   195  0FEA                     	;# 
   196  0FEB                     	;# 
   197  0FED                     	;# 
   198  0FEE                     	;# 
   199  0FEF                     	;# 
   200                           
   201                           	psect	strings
   202  0425                     __pstrings:	
   203  0425                     __stringtab:	
   204  0425  3400               	retlw	0
   205  0426                     __end_of__stringtab:	
   206  0426                     _moninit:	
   207  0426  341F               	retlw	31
   208  0427  341C               	retlw	28
   209  0428  341F               	retlw	31
   210  0429  341E               	retlw	30
   211  042A  341F               	retlw	31
   212  042B  341E               	retlw	30
   213  042C  341F               	retlw	31
   214  042D  341F               	retlw	31
   215  042E  341E               	retlw	30
   216  042F  341F               	retlw	31
   217  0430  341E               	retlw	30
   218  0431  341F               	retlw	31
   219  0432                     __end_of_moninit:	
   220  0018                     _T1CON	set	24
   221  0017                     _TMR1H	set	23
   222  0016                     _TMR1L	set	22
   223  008E                     _ADIF	set	142
   224  0098                     _CLC1IF	set	152
   225  005F                     _GIE	set	95
   226  005E                     _PEIE	set	94
   227  008D                     _RCIF	set	141
   228  005D                     _T0IE	set	93
   229  005A                     _T0IF	set	90
   230  0088                     _TMR1IF	set	136
   231  008C                     _TXIF	set	140
   232  009D                     _ADCON0	set	157
   233  009E                     _ADCON1	set	158
   234  008C                     _TRISA	set	140
   235  008D                     _TRISB	set	141
   236  008E                     _TRISC	set	142
   237  0498                     _CLC1IE	set	1176
   238  04A8                     _PS0	set	1192
   239  04A9                     _PS1	set	1193
   240  04AA                     _PS2	set	1194
   241  04AB                     _PSA	set	1195
   242  048D                     _RCIE	set	1165
   243  04AD                     _T0CS	set	1197
   244  0488                     _TMR1IE	set	1160
   245  048C                     _TXIE	set	1164
   246  0111                     _CM1CON0	set	273
   247  0117                     _FVRCON	set	279
   248  018C                     _ANSELA	set	396
   249  0199                     _RCREG	set	409
   250  019C                     _SPBRGH	set	412
   251  019B                     _SPBRGL	set	411
   252  019A                     _TXREG	set	410
   253  0CFB                     _BRG16	set	3323
   254  0CF2                     _BRGH	set	3314
   255  0CEC                     _CREN	set	3308
   256  0CEF                     _SPEN	set	3311
   257  0CF4                     _SYNC	set	3316
   258  0CF5                     _TXEN	set	3317
   259  0432                     __stringdata:	
   260  0432                     STR_2:	
   261  0432  344A               	retlw	74	;'J'
   262  0433  3461               	retlw	97	;'a'
   263  0434  346E               	retlw	110	;'n'
   264  0435  3446               	retlw	70	;'F'
   265  0436  3465               	retlw	101	;'e'
   266  0437  3462               	retlw	98	;'b'
   267  0438  344D               	retlw	77	;'M'
   268  0439  3461               	retlw	97	;'a'
   269  043A  3472               	retlw	114	;'r'
   270  043B  3441               	retlw	65	;'A'
   271  043C  3470               	retlw	112	;'p'
   272  043D  3472               	retlw	114	;'r'
   273  043E  344D               	retlw	77	;'M'
   274  043F  3461               	retlw	97	;'a'
   275  0440  3479               	retlw	121	;'y'
   276  0441  344A               	retlw	74	;'J'
   277  0442  3475               	retlw	117	;'u'
   278  0443  346E               	retlw	110	;'n'
   279  0444  344A               	retlw	74	;'J'
   280  0445  3475               	retlw	117	;'u'
   281  0446  346C               	retlw	108	;'l'
   282  0447  3441               	retlw	65	;'A'
   283  0448  3475               	retlw	117	;'u'
   284  0449  3467               	retlw	103	;'g'
   285  044A  3453               	retlw	83	;'S'
   286  044B  3465               	retlw	101	;'e'
   287  044C  3470               	retlw	112	;'p'
   288  044D  344F               	retlw	79	;'O'
   289  044E  3463               	retlw	99	;'c'
   290  044F  3474               	retlw	116	;'t'
   291  0450  344E               	retlw	78	;'N'
   292  0451  346F               	retlw	111	;'o'
   293  0452  3476               	retlw	118	;'v'
   294  0453  3444               	retlw	68	;'D'
   295  0454  3465               	retlw	101	;'e'
   296  0455  3463               	retlw	99	;'c'
   297  0456  3400               	retlw	0
   298  0457                     STR_1:	
   299  0457  3453               	retlw	83	;'S'
   300  0458  3475               	retlw	117	;'u'
   301  0459  346E               	retlw	110	;'n'
   302  045A  344D               	retlw	77	;'M'
   303  045B  346F               	retlw	111	;'o'
   304  045C  346E               	retlw	110	;'n'
   305  045D  3454               	retlw	84	;'T'
   306  045E  3475               	retlw	117	;'u'
   307  045F  3465               	retlw	101	;'e'
   308  0460  3457               	retlw	87	;'W'
   309  0461  3465               	retlw	101	;'e'
   310  0462  3464               	retlw	100	;'d'
   311  0463  3454               	retlw	84	;'T'
   312  0464  3468               	retlw	104	;'h'
   313  0465  3475               	retlw	117	;'u'
   314  0466  3446               	retlw	70	;'F'
   315  0467  3472               	retlw	114	;'r'
   316  0468  3469               	retlw	105	;'i'
   317  0469  3453               	retlw	83	;'S'
   318  046A  3461               	retlw	97	;'a'
   319  046B  3474               	retlw	116	;'t'
   320  046C  3400               	retlw	0
   321  046D                     __end_of__stringdata:	
   322                           
   323                           	psect	cinit
   324  004D                     start_initialization:	
   325                           ; #config settings
   326                           
   327  004D                     __initialization:	
   328  004D  3020               	movlw	low __pbssBANK0
   329                           
   330                           ; Clear objects allocated to BITCOMMON
   331  004E  01FB               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   332                           
   333                           ; Clear objects allocated to BANK0
   334  004F  0084               	movwf	4
   335  0050  3000               	movlw	high __pbssBANK0
   336  0051  0085               	movwf	5
   337  0052  3033               	movlw	51
   338  0053  3184  2490  3180   	fcall	clear_ram
   339                           
   340                           ; Clear objects allocated to BANK1
   341  0056  30A0               	movlw	low __pbssBANK1
   342  0057  0084               	movwf	4
   343  0058  3000               	movlw	high __pbssBANK1
   344  0059  0085               	movwf	5
   345  005A  303C               	movlw	60
   346  005B  3184  2490  3180   	fcall	clear_ram
   347  005E                     end_of_initialization:	
   348                           ;End of C runtime variable initialization code
   349                           
   350  005E                     __end_of__initialization:	
   351  005E  0020               	movlb	0
   352  005F  2860               	ljmp	_main	;jump to C main() function
   353  0060                     __pmaintext:	
   354 ;;
   355 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   356 ;;
   357 ;; *************** function _main *****************
   358 ;; Defined at:
   359 ;;		line 52 in file "D:\_creatiff\_Projects\pic16f1509\fw\main.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;		None
   362 ;; Auto vars:     Size  Location     Type
   363 ;;  ptr             2    0        PTR unsigned char 
   364 ;; Return value:  Size  Location     Type
   365 ;;		None               void
   366 ;; Registers used:
   367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   368 ;; Tracked objects:
   369 ;;		On entry : 17F/0
   370 ;;		On exit  : 1F/0
   371 ;;		Unchanged: FFE00/0
   372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   373 ;;      Params:         0       0       0       0       0       0       0       0
   374 ;;      Locals:         0       0       0       0       0       0       0       0
   375 ;;      Temps:          0       0       0       0       0       0       0       0
   376 ;;      Totals:         0       0       0       0       0       0       0       0
   377 ;;Total ram usage:        0 bytes
   378 ;; Hardware stack levels required when called:    7
   379 ;; This function calls:
   380 ;;		_ctime
   381 ;; This function is called by:
   382 ;;		Startup code after reset
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           
   387                           ;psect for function _main
   388  0060                     _main:	
   389                           
   390                           ;main.c: 57: ANSELA = 0x00;
   391                           
   392                           ; Regs used in _main: [allreg]
   393  0060  0023               	movlb	3	; select bank3
   394  0061  018C               	clrf	12	;volatile
   395                           
   396                           ;main.c: 58: CM1CON0 = 0x00;
   397  0062  0022               	movlb	2	; select bank2
   398  0063  0191               	clrf	17	;volatile
   399                           
   400                           ;main.c: 60: TRISA=0;
   401  0064  0021               	movlb	1	; select bank1
   402  0065  018C               	clrf	12	;volatile
   403                           
   404                           ;main.c: 61: TRISC=0;
   405  0066  018E               	clrf	14	;volatile
   406                           
   407                           ;main.c: 62: TRISB=0b00100000;
   408  0067  3020               	movlw	32
   409  0068  008D               	movwf	13	;volatile
   410                           
   411                           ;main.c: 66: FVRCON=0xF3;
   412  0069  30F3               	movlw	243
   413  006A  0022               	movlb	2	; select bank2
   414  006B  0097               	movwf	23	;volatile
   415                           
   416                           ;main.c: 67: ADCON1=0b10000000;
   417  006C  3080               	movlw	128
   418  006D  0021               	movlb	1	; select bank1
   419  006E  009E               	movwf	30	;volatile
   420                           
   421                           ;main.c: 68: ADCON0=0b01110101;
   422  006F  3075               	movlw	117
   423  0070  009D               	movwf	29	;volatile
   424                           
   425                           ;main.c: 71: T0CS=0;
   426  0071  1295               	bcf	21,5	;volatile
   427                           
   428                           ;main.c: 73: PSA=1;
   429  0072  1595               	bsf	21,3	;volatile
   430                           
   431                           ;main.c: 74: PS0=0;
   432  0073  1015               	bcf	21,0	;volatile
   433                           
   434                           ;main.c: 75: PS1=0;
   435  0074  1095               	bcf	21,1	;volatile
   436                           
   437                           ;main.c: 76: PS2=0;
   438  0075  1115               	bcf	21,2	;volatile
   439                           
   440                           ;main.c: 78: T0IE=1;
   441  0076  168B               	bsf	11,5	;volatile
   442                           
   443                           ;main.c: 81: T1CON=0b10001001;
   444  0077  3089               	movlw	137
   445  0078  0020               	movlb	0	; select bank0
   446  0079  0098               	movwf	24	;volatile
   447                           
   448                           ;main.c: 82: TMR1IE=1;
   449  007A  0021               	movlb	1	; select bank1
   450  007B  1411               	bsf	17,0	;volatile
   451                           
   452                           ;main.c: 86: for(txpos=0;txpos++;txpos<30)
   453  007C  0020               	movlb	0	; select bank0
   454  007D  01A1               	clrf	_txpos
   455  007E  2888               	goto	l1921
   456  007F                     l1919:	
   457                           
   458                           ;main.c: 87: {
   459                           ;main.c: 88: txbufer[txpos]='\0';
   460  007F  0821               	movf	_txpos,w
   461  0080  3EBE               	addlw	_txbufer& (0+255)
   462  0081  0086               	movwf	6
   463  0082  0187               	clrf	7
   464  0083  0181               	clrf	1
   465                           
   466                           ;main.c: 89: rxbufer[txpos]='\0';
   467  0084  0821               	movf	_txpos,w
   468  0085  3EA0               	addlw	_rxbufer& (0+255)
   469  0086  0086               	movwf	6
   470  0087  0181               	clrf	1
   471  0088                     l1921:	
   472  0088  0AA1               	incf	_txpos,f
   473  0089  0B21               	decfsz	_txpos,w
   474  008A  287F               	goto	l1919
   475                           
   476                           ;main.c: 90: }
   477                           ;main.c: 91: CREN=1;
   478  008B  0023               	movlb	3	; select bank3
   479  008C  161D               	bsf	29,4	;volatile
   480                           
   481                           ;main.c: 92: TXEN=1;
   482  008D  169E               	bsf	30,5	;volatile
   483                           
   484                           ;main.c: 93: SYNC=0;
   485  008E  121E               	bcf	30,4	;volatile
   486                           
   487                           ;main.c: 94: BRG16=1;
   488  008F  159F               	bsf	31,3	;volatile
   489                           
   490                           ;main.c: 95: SPEN=1;
   491  0090  179D               	bsf	29,7	;volatile
   492                           
   493                           ;main.c: 96: BRGH=1;
   494  0091  151E               	bsf	30,2	;volatile
   495                           
   496                           ;main.c: 97: SPBRGH=0x01;
   497  0092  3001               	movlw	1
   498  0093  009C               	movwf	28	;volatile
   499                           
   500                           ;main.c: 98: SPBRGL=0xA0;
   501  0094  30A0               	movlw	160
   502  0095  009B               	movwf	27	;volatile
   503                           
   504                           ;main.c: 99: RCIE=1;
   505  0096  0021               	movlb	1	; select bank1
   506  0097  1691               	bsf	17,5	;volatile
   507                           
   508                           ;main.c: 100: TXIE=1;
   509  0098  1611               	bsf	17,4	;volatile
   510                           
   511                           ;main.c: 102: utime=ctime(&unixtime);
   512  0099  304F               	movlw	_unixtime& (0+255)
   513  009A  20B9  3180         	fcall	_ctime
   514                           
   515                           ;main.c: 109: CLC1IF = 0;
   516  009C  1013               	bcf	19,0	;volatile
   517                           
   518                           ;main.c: 110: CLC1IE = 0;
   519  009D  0021               	movlb	1	; select bank1
   520  009E  1013               	bcf	19,0	;volatile
   521                           
   522                           ;main.c: 113: PEIE=1;
   523  009F  170B               	bsf	11,6	;volatile
   524                           
   525                           ;main.c: 114: GIE=1;
   526  00A0  178B               	bsf	11,7	;volatile
   527                           
   528                           ;main.c: 117: st=0;
   529  00A1  0020               	movlb	0	; select bank0
   530  00A2  01A0               	clrf	_st
   531  00A3  28A9               	goto	l1947
   532  00A4                     l110:	
   533                           ;main.c: 123: {
   534                           ;main.c: 124: case 0:
   535                           
   536  00A4  304F               	movlw	_unixtime& (0+255)
   537                           
   538                           ;main.c: 125: t_active=1;
   539  00A5  147B               	bsf	_t_active/(0+8),_t_active& (0+7)
   540                           
   541                           ;main.c: 127: utime=ctime(&unixtime);
   542  00A6  20B9  3180         	fcall	_ctime
   543                           
   544                           ;main.c: 129: t_active=0;
   545  00A8  107B               	bcf	_t_active/(0+8),_t_active& (0+7)
   546  00A9                     l109:	
   547                           ;main.c: 132: break;
   548                           
   549  00A9                     l1947:	
   550  00A9  0820               	movf	_st,w
   551                           
   552                           ; Switch size 1, requested type "space"
   553                           ; Number of cases is 4, Range of values is 0 to 3
   554                           ; switch strategies available:
   555                           ; Name         Instructions Cycles
   556                           ; simple_byte           13     7 (average)
   557                           ; direct_byte           14     6 (fixed)
   558                           ; jumptable            260     6 (fixed)
   559                           ; rangetable             8     4 (fixed)
   560                           ; spacedrange           13     6 (fixed)
   561                           ; locatedrange           4     3 (fixed)
   562                           ;	Chosen strategy is simple_byte
   563  00AA  3A00               	xorlw	0	; case 0
   564  00AB  1903               	skipnz
   565  00AC  28A4               	goto	l110
   566  00AD  3A01               	xorlw	1	; case 1
   567  00AE  1903               	skipnz
   568  00AF  28A9               	goto	l109
   569  00B0  3A03               	xorlw	3	; case 2
   570  00B1  1903               	skipnz
   571  00B2  28A9               	goto	l109
   572  00B3  3A01               	xorlw	1	; case 3
   573  00B4  1903               	skipnz
   574  00B5  28A9               	goto	l109
   575  00B6  28A9               	goto	l1947
   576  00B7  3180  284B         	ljmp	start
   577  00B9                     __end_of_main:	
   578  00B9                     __ptext389:	
   579 ;; *************** function _ctime *****************
   580 ;; Defined at:
   581 ;;		line 104 in file "../../common/ctime.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;  tp              1    wreg     PTR const long 
   584 ;;		 -> unixtime(4), 
   585 ;; Auto vars:     Size  Location     Type
   586 ;;  tp              1   16[BANK0 ] PTR const long 
   587 ;;		 -> unixtime(4), 
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      PTR unsigned char 
   590 ;; Registers used:
   591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   592 ;; Tracked objects:
   593 ;;		On entry : 1E/1
   594 ;;		On exit  : 1F/0
   595 ;;		Unchanged: FFE00/0
   596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   597 ;;      Params:         0       0       0       0       0       0       0       0
   598 ;;      Locals:         0       1       0       0       0       0       0       0
   599 ;;      Temps:          0       0       0       0       0       0       0       0
   600 ;;      Totals:         0       1       0       0       0       0       0       0
   601 ;;Total ram usage:        1 bytes
   602 ;; Hardware stack levels used:    1
   603 ;; Hardware stack levels required when called:    6
   604 ;; This function calls:
   605 ;;		_localtime
   606 ;;		_asctime
   607 ;; This function is called by:
   608 ;;		_main
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           
   613                           ;psect for function _ctime
   614  00B9                     _ctime:	
   615                           
   616                           ; Regs used in _ctime: [allreg]
   617                           ;ctime@tp stored from wreg
   618  00B9  0020               	movlb	0	; select bank0
   619  00BA  00E3               	movwf	ctime@tp
   620  00BB  222B  3180         	fcall	_localtime
   621  00BD  28BE               	ljmp	_asctime
   622  00BE                     __end_of_ctime:	
   623  00BE                     __ptext393:	
   624 ;; *************** function _asctime *****************
   625 ;; Defined at:
   626 ;;		line 77 in file "../../common/ctime.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  tim             1    wreg     PTR const struct tm
   629 ;;		 -> gmtime@tim(18), 
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  tim             1    4[BANK0 ] PTR const struct tm
   632 ;;		 -> gmtime@tim(18), 
   633 ;;  cp              1    5[BANK0 ] PTR unsigned char 
   634 ;;		 -> asctime@buf(27), 
   635 ;;  s               1    3[BANK0 ] PTR const unsigned char 
   636 ;;		 -> STR_2(37), STR_1(22), 
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      PTR unsigned char 
   639 ;; Registers used:
   640 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 1F/0
   643 ;;		On exit  : 1F/0
   644 ;;		Unchanged: FFFE0/0
   645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   646 ;;      Params:         0       0       0       0       0       0       0       0
   647 ;;      Locals:         0       3       0       0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0       0       0       0
   649 ;;      Totals:         0       3       0       0       0       0       0       0
   650 ;;Total ram usage:        3 bytes
   651 ;; Hardware stack levels used:    1
   652 ;; Hardware stack levels required when called:    4
   653 ;; This function calls:
   654 ;;		___bmul
   655 ;;		_put2d
   656 ;;		___awdiv
   657 ;;		___awmod
   658 ;; This function is called by:
   659 ;;		_ctime
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _asctime
   665  00BE                     _asctime:	
   666                           
   667                           ; Regs used in _asctime: [wreg+fsr1l-status,0+pclath+cstack]
   668                           ;asctime@tim stored from wreg
   669  00BE  00D7               	movwf	asctime@tim
   670  00BF  3003               	movlw	3
   671  00C0  00F2               	movwf	?___bmul
   672  00C1  0857               	movf	asctime@tim,w
   673  00C2  3E0C               	addlw	12
   674  00C3  0086               	movwf	6
   675  00C4  0187               	clrf	7
   676  00C5  0801               	movf	1,w
   677  00C6  2176               	fcall	___bmul
   678  00C7  3E57               	addlw	low (STR_1| (0+32768))
   679  00C8  00D6               	movwf	asctime@s
   680  00C9  3022               	movlw	asctime@buf& (0+255)
   681  00CA  00D8               	movwf	asctime@cp
   682  00CB  0086               	movwf	6
   683  00CC  0187               	clrf	7
   684  00CD  0856               	movf	asctime@s,w
   685  00CE  3184               	movlp	high __stringtab
   686  00CF  000A               	callw
   687  00D0  3182  2238  3180   	fcall	PL6	;call to abstracted procedure
   688  00D3  3184               	movlp	high __stringtab
   689  00D4  000A               	callw
   690  00D5  3182  2238  3180   	fcall	PL6	;call to abstracted procedure
   691  00D8  3184               	movlp	high __stringtab
   692  00D9  000A               	callw
   693  00DA  3180               	pagesel	$	;select current page
   694  00DB  0081               	movwf	1
   695  00DC  0AD8               	incf	asctime@cp,f
   696  00DD  0858               	movf	asctime@cp,w
   697  00DE  0086               	movwf	6
   698  00DF  3020               	movlw	32
   699  00E0  0187               	clrf	7
   700  00E1  0081               	movwf	1
   701  00E2  3003               	movlw	3
   702  00E3  0AD8               	incf	asctime@cp,f
   703  00E4  00F2               	movwf	?___bmul
   704  00E5  0857               	movf	asctime@tim,w
   705  00E6  3E08               	addlw	8
   706  00E7  0086               	movwf	6
   707  00E8  0801               	movf	1,w
   708  00E9  2176               	fcall	___bmul
   709  00EA  3E32               	addlw	low (STR_2| (0+32768))
   710  00EB  00D6               	movwf	asctime@s
   711  00EC  0858               	movf	asctime@cp,w
   712  00ED  0086               	movwf	6
   713  00EE  0187               	clrf	7
   714  00EF  0856               	movf	asctime@s,w
   715  00F0  3184               	movlp	high __stringtab
   716  00F1  000A               	callw
   717  00F2  3182  2238  3180   	fcall	PL6	;call to abstracted procedure
   718  00F5  3184               	movlp	high __stringtab
   719  00F6  000A               	callw
   720  00F7  3182  2238  3180   	fcall	PL6	;call to abstracted procedure
   721  00FA  3184               	movlp	high __stringtab
   722  00FB  000A               	callw
   723  00FC  3180               	pagesel	$	;select current page
   724  00FD  0081               	movwf	1
   725  00FE  3020               	movlw	32
   726  00FF  00A9               	movwf	asctime@buf+7
   727  0100  0857               	movf	asctime@tim,w
   728  0101  0086               	movwf	6
   729  0102  0187               	clrf	7
   730  0103  3F46               	moviw [6]fsr1
   731  0104  00D3               	movwf	?_put2d
   732  0105  3020               	movlw	32
   733  0106  00D4               	movwf	?_put2d+1
   734  0107  00D5               	movwf	?_put2d+2
   735  0108  302C               	movlw	(asctime@buf+10)& (0+255)
   736  0109  214F  3180         	fcall	_put2d
   737  010B  0857               	movf	asctime@tim,w
   738  010C  0086               	movwf	6
   739  010D  0187               	clrf	7
   740  010E  3F44               	moviw [4]fsr1
   741  010F  2240  3180         	fcall	PL10	;call to abstracted procedure
   742  0111  302F               	movlw	(asctime@buf+13)& (0+255)
   743  0112  214F  3180         	fcall	_put2d
   744  0114  0857               	movf	asctime@tim,w
   745  0115  0086               	movwf	6
   746  0116  0187               	clrf	7
   747  0117  3F42               	moviw [2]fsr1
   748  0118  2240  3180         	fcall	PL10	;call to abstracted procedure
   749  011A  3032               	movlw	(asctime@buf+16)& (0+255)
   750  011B  214F  3180         	fcall	_put2d
   751  011D  0857               	movf	asctime@tim,w
   752  011E  0086               	movwf	6
   753  011F  0187               	clrf	7
   754  0120  0801               	movf	1,w
   755  0121  00D3               	movwf	?_put2d
   756  0122  3030               	movlw	48
   757  0123  00D4               	movwf	?_put2d+1
   758  0124  3020               	movlw	32
   759  0125  00D5               	movwf	?_put2d+2
   760  0126  3035               	movlw	(asctime@buf+19)& (0+255)
   761  0127  214F  3180         	fcall	_put2d
   762  0129  3064               	movlw	100
   763  012A  00F2               	movwf	?___awdiv
   764  012B  01F3               	clrf	?___awdiv+1
   765  012C  2246  3180         	fcall	PL12	;call to abstracted procedure
   766  012E  00F4               	movwf	?___awdiv+2
   767  012F  3F41               	moviw [1]fsr1
   768  0130  00F5               	movwf	?___awdiv+3
   769  0131  21BB  3180         	fcall	___awdiv
   770  0133  0872               	movf	?___awdiv,w
   771  0134  3E13               	addlw	19
   772  0135  00D3               	movwf	?_put2d
   773  0136  3020               	movlw	32
   774  0137  00D4               	movwf	?_put2d+1
   775  0138  3038               	movlw	(asctime@buf+22)& (0+255)
   776  0139  01D5               	clrf	?_put2d+2
   777  013A  214F  3180         	fcall	_put2d
   778  013C  3064               	movlw	100
   779  013D  00F2               	movwf	?___awmod
   780  013E  01F3               	clrf	?___awmod+1
   781  013F  2246  3180         	fcall	PL12	;call to abstracted procedure
   782  0141  00F4               	movwf	?___awmod+2
   783  0142  3F41               	moviw [1]fsr1
   784  0143  00F5               	movwf	?___awmod+3
   785  0144  2182  3180         	fcall	___awmod
   786  0146  0872               	movf	?___awmod,w
   787  0147  00D3               	movwf	?_put2d
   788  0148  3030               	movlw	48
   789  0149  00D4               	movwf	?_put2d+1
   790  014A  300A               	movlw	10
   791  014B  00D5               	movwf	?_put2d+2
   792  014C  303A               	movlw	(asctime@buf+24)& (0+255)
   793  014D  214F               	fcall	_put2d
   794  014E  3422               	retlw	asctime@buf& (0+255)
   795  014F                     __end_of_asctime:	
   796  014F                     __ptext394:	
   797 ;; *************** function _put2d *****************
   798 ;; Defined at:
   799 ;;		line 12 in file "../../common/ctime.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  cp              1    wreg     PTR unsigned char 
   802 ;;		 -> asctime@buf(27), 
   803 ;;  i               1    0[BANK0 ] unsigned char 
   804 ;;  cl              1    1[BANK0 ] unsigned char 
   805 ;;  ct              1    2[BANK0 ] unsigned char 
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  cp              1   10[COMMON] PTR unsigned char 
   808 ;;		 -> asctime@buf(27), 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  2    0[BANK0 ] int 
   811 ;; Registers used:
   812 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 1F/0
   815 ;;		On exit  : 1F/0
   816 ;;		Unchanged: FFFE0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   818 ;;      Params:         0       3       0       0       0       0       0       0
   819 ;;      Locals:         1       0       0       0       0       0       0       0
   820 ;;      Temps:          0       0       0       0       0       0       0       0
   821 ;;      Totals:         1       3       0       0       0       0       0       0
   822 ;;Total ram usage:        4 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; Hardware stack levels required when called:    3
   825 ;; This function calls:
   826 ;;		___lbmod
   827 ;;		___lbdiv
   828 ;; This function is called by:
   829 ;;		_asctime
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           
   834                           ;psect for function _put2d
   835  014F                     _put2d:	
   836                           
   837                           ; Regs used in _put2d: [wreg+fsr1l-status,0+pclath+cstack]
   838                           ;put2d@cp stored from wreg
   839  014F  00FA               	movwf	put2d@cp
   840  0150  0086               	movwf	6
   841  0151  0187               	clrf	7
   842  0152  0855               	movf	put2d@ct,w
   843  0153  0081               	movwf	1
   844  0154  03FA               	decf	put2d@cp,f
   845  0155  087A               	movf	put2d@cp,w
   846  0156  0086               	movwf	6
   847  0157  300A               	movlw	10
   848  0158  00F2               	movwf	?___lbmod
   849  0159  0853               	movf	put2d@i,w
   850  015A  21FB  3180         	fcall	___lbmod
   851  015C  3E30               	addlw	48
   852  015D  0081               	movwf	1
   853  015E  300A               	movlw	10
   854  015F  00F2               	movwf	?___lbdiv
   855  0160  0853               	movf	put2d@i,w
   856  0161  2213  3180         	fcall	___lbdiv
   857  0163  00D3               	movwf	put2d@i
   858  0164  3A00               	xorlw	0
   859  0165  1903               	skipnz
   860  0166  296F               	goto	l1465
   861  0167  03FA               	decf	put2d@cp,f
   862  0168  087A               	movf	put2d@cp,w
   863  0169  0086               	movwf	6
   864  016A  0187               	clrf	7
   865  016B  0853               	movf	put2d@i,w
   866  016C  3E30               	addlw	48
   867  016D  0081               	movwf	1
   868  016E  0008               	return
   869  016F                     l1465:	
   870  016F  03FA               	decf	put2d@cp,f
   871  0170  087A               	movf	put2d@cp,w
   872  0171  0086               	movwf	6
   873  0172  0187               	clrf	7
   874  0173  0854               	movf	put2d@cl,w
   875  0174  0081               	movwf	1
   876  0175  0008               	return
   877  0176                     __end_of_put2d:	
   878  0176                     __ptext395:	
   879 ;; *************** function ___bmul *****************
   880 ;; Defined at:
   881 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.12\sources\bmul.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  multiplier      1    wreg     unsigned char 
   884 ;;  multiplicand    1    2[COMMON] unsigned char 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  multiplier      1    4[COMMON] unsigned char 
   887 ;;  product         1    3[COMMON] unsigned char 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      unsigned char 
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0
   892 ;; Tracked objects:
   893 ;;		On entry : 1F/0
   894 ;;		On exit  : 1F/0
   895 ;;		Unchanged: FFFE0/0
   896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   897 ;;      Params:         1       0       0       0       0       0       0       0
   898 ;;      Locals:         2       0       0       0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0
   900 ;;      Totals:         3       0       0       0       0       0       0       0
   901 ;;Total ram usage:        3 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    2
   904 ;; This function calls:
   905 ;;		Nothing
   906 ;; This function is called by:
   907 ;;		_asctime
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function ___bmul
   913  0176                     ___bmul:	
   914                           
   915                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   916                           ;___bmul@multiplier stored from wreg
   917  0176  00F4               	movwf	___bmul@multiplier
   918  0177  01F3               	clrf	___bmul@product
   919  0178                     l1591:	
   920  0178  0872               	movf	___bmul@multiplicand,w
   921  0179  1874               	btfsc	___bmul@multiplier,0
   922  017A  07F3               	addwf	___bmul@product,f
   923  017B  35F2               	lslf	___bmul@multiplicand,f
   924  017C  36F4               	lsrf	___bmul@multiplier,f
   925  017D  08F4               	movf	___bmul@multiplier,f
   926  017E  1D03               	skipz
   927  017F  2978               	goto	l1591
   928  0180  0873               	movf	___bmul@product,w
   929  0181  0008               	return
   930  0182                     __end_of___bmul:	
   931  0182                     __ptext402:	
   932 ;; *************** function ___awmod *****************
   933 ;; Defined at:
   934 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.12\sources\awmod.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;  divisor         2    2[COMMON] int 
   937 ;;  dividend        2    4[COMMON] int 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  sign            1    7[COMMON] unsigned char 
   940 ;;  counter         1    6[COMMON] unsigned char 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  2    2[COMMON] int 
   943 ;; Registers used:
   944 ;;		wreg, status,2, status,0
   945 ;; Tracked objects:
   946 ;;		On entry : 1F/0
   947 ;;		On exit  : 1F/0
   948 ;;		Unchanged: FFFE0/0
   949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   950 ;;      Params:         4       0       0       0       0       0       0       0
   951 ;;      Locals:         2       0       0       0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0       0
   953 ;;      Totals:         6       0       0       0       0       0       0       0
   954 ;;Total ram usage:        6 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    2
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		_gmtime
   961 ;;		_asctime
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           
   966                           ;psect for function ___awmod
   967  0182                     ___awmod:	
   968                           
   969                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   970  0182  01F7               	clrf	___awmod@sign
   971  0183  1FF5               	btfss	___awmod@dividend+1,7
   972  0184  298C               	goto	l1803
   973  0185  09F4               	comf	___awmod@dividend,f
   974  0186  09F5               	comf	___awmod@dividend+1,f
   975  0187  0AF4               	incf	___awmod@dividend,f
   976  0188  1903               	skipnz
   977  0189  0AF5               	incf	___awmod@dividend+1,f
   978  018A  01F7               	clrf	___awmod@sign
   979  018B  0AF7               	incf	___awmod@sign,f
   980  018C                     l1803:	
   981  018C  1FF3               	btfss	___awmod@divisor+1,7
   982  018D  2993               	goto	l1807
   983  018E  09F2               	comf	___awmod@divisor,f
   984  018F  09F3               	comf	___awmod@divisor+1,f
   985  0190  0AF2               	incf	___awmod@divisor,f
   986  0191  1903               	skipnz
   987  0192  0AF3               	incf	___awmod@divisor+1,f
   988  0193                     l1807:	
   989  0193  0873               	movf	___awmod@divisor+1,w
   990  0194  0472               	iorwf	___awmod@divisor,w
   991  0195  1903               	skipnz
   992  0196  29AE               	goto	l1823
   993  0197  01F6               	clrf	___awmod@counter
   994  0198                     L5:	
   995  0198  0AF6               	incf	___awmod@counter,f
   996  0199  1BF3               	btfsc	___awmod@divisor+1,7
   997  019A  299E               	goto	l1815
   998  019B  35F2               	lslf	___awmod@divisor,f
   999  019C  0DF3               	rlf	___awmod@divisor+1,f
  1000  019D  2998               	goto	L5
  1001  019E                     l1815:	
  1002  019E  0873               	movf	___awmod@divisor+1,w
  1003  019F  0275               	subwf	___awmod@dividend+1,w
  1004  01A0  1D03               	skipz
  1005  01A1  29A4               	goto	u1075
  1006  01A2  0872               	movf	___awmod@divisor,w
  1007  01A3  0274               	subwf	___awmod@dividend,w
  1008  01A4                     u1075:	
  1009  01A4  1C03               	skipc
  1010  01A5  29AA               	goto	l1819
  1011  01A6  0872               	movf	___awmod@divisor,w
  1012  01A7  02F4               	subwf	___awmod@dividend,f
  1013  01A8  0873               	movf	___awmod@divisor+1,w
  1014  01A9  3BF5               	subwfb	___awmod@dividend+1,f
  1015  01AA                     l1819:	
  1016  01AA  36F3               	lsrf	___awmod@divisor+1,f
  1017  01AB  0CF2               	rrf	___awmod@divisor,f
  1018  01AC  0BF6               	decfsz	___awmod@counter,f
  1019  01AD  299E               	goto	l1815
  1020  01AE                     l1823:	
  1021  01AE  0877               	movf	___awmod@sign,w
  1022  01AF  1903               	btfsc	3,2
  1023  01B0  29B6               	goto	l1827
  1024  01B1  09F4               	comf	___awmod@dividend,f
  1025  01B2  09F5               	comf	___awmod@dividend+1,f
  1026  01B3  0AF4               	incf	___awmod@dividend,f
  1027  01B4  1903               	skipnz
  1028  01B5  0AF5               	incf	___awmod@dividend+1,f
  1029  01B6                     l1827:	
  1030  01B6  0875               	movf	___awmod@dividend+1,w
  1031  01B7  00F3               	movwf	?___awmod+1
  1032  01B8  0874               	movf	___awmod@dividend,w
  1033  01B9  00F2               	movwf	?___awmod
  1034  01BA  0008               	return
  1035  01BB                     __end_of___awmod:	
  1036  01BB                     __ptext399:	
  1037 ;; *************** function ___awdiv *****************
  1038 ;; Defined at:
  1039 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.12\sources\awdiv.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;  divisor         2    2[COMMON] int 
  1042 ;;  dividend        2    4[COMMON] int 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  quotient        2    8[COMMON] int 
  1045 ;;  sign            1    7[COMMON] unsigned char 
  1046 ;;  counter         1    6[COMMON] unsigned char 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  2    2[COMMON] int 
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0
  1051 ;; Tracked objects:
  1052 ;;		On entry : 1F/0
  1053 ;;		On exit  : 1F/0
  1054 ;;		Unchanged: FFFE0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1056 ;;      Params:         4       0       0       0       0       0       0       0
  1057 ;;      Locals:         4       0       0       0       0       0       0       0
  1058 ;;      Temps:          0       0       0       0       0       0       0       0
  1059 ;;      Totals:         8       0       0       0       0       0       0       0
  1060 ;;Total ram usage:        8 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; Hardware stack levels required when called:    2
  1063 ;; This function calls:
  1064 ;;		Nothing
  1065 ;; This function is called by:
  1066 ;;		_asctime
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           
  1071                           ;psect for function ___awdiv
  1072  01BB                     ___awdiv:	
  1073                           
  1074                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1075  01BB  01F7               	clrf	___awdiv@sign
  1076  01BC  1FF3               	btfss	___awdiv@divisor+1,7
  1077  01BD  29C5               	goto	l1687
  1078  01BE  09F2               	comf	___awdiv@divisor,f
  1079  01BF  09F3               	comf	___awdiv@divisor+1,f
  1080  01C0  0AF2               	incf	___awdiv@divisor,f
  1081  01C1  1903               	skipnz
  1082  01C2  0AF3               	incf	___awdiv@divisor+1,f
  1083  01C3  01F7               	clrf	___awdiv@sign
  1084  01C4  0AF7               	incf	___awdiv@sign,f
  1085  01C5                     l1687:	
  1086  01C5  1FF5               	btfss	___awdiv@dividend+1,7
  1087  01C6  29CE               	goto	l1693
  1088  01C7  09F4               	comf	___awdiv@dividend,f
  1089  01C8  09F5               	comf	___awdiv@dividend+1,f
  1090  01C9  0AF4               	incf	___awdiv@dividend,f
  1091  01CA  1903               	skipnz
  1092  01CB  0AF5               	incf	___awdiv@dividend+1,f
  1093  01CC  3001               	movlw	1
  1094  01CD  06F7               	xorwf	___awdiv@sign,f
  1095  01CE                     l1693:	
  1096  01CE  01F8               	clrf	___awdiv@quotient
  1097  01CF  01F9               	clrf	___awdiv@quotient+1
  1098  01D0  0873               	movf	___awdiv@divisor+1,w
  1099  01D1  0472               	iorwf	___awdiv@divisor,w
  1100  01D2  1903               	skipnz
  1101  01D3  29EE               	goto	l1715
  1102  01D4  01F6               	clrf	___awdiv@counter
  1103  01D5                     L2:	
  1104  01D5  0AF6               	incf	___awdiv@counter,f
  1105  01D6  1BF3               	btfsc	___awdiv@divisor+1,7
  1106  01D7  29DB               	goto	l1703
  1107  01D8  35F2               	lslf	___awdiv@divisor,f
  1108  01D9  0DF3               	rlf	___awdiv@divisor+1,f
  1109  01DA  29D5               	goto	L2
  1110  01DB                     l1703:	
  1111  01DB  35F8               	lslf	___awdiv@quotient,f
  1112  01DC  0DF9               	rlf	___awdiv@quotient+1,f
  1113  01DD  0873               	movf	___awdiv@divisor+1,w
  1114  01DE  0275               	subwf	___awdiv@dividend+1,w
  1115  01DF  1D03               	skipz
  1116  01E0  29E3               	goto	u865
  1117  01E1  0872               	movf	___awdiv@divisor,w
  1118  01E2  0274               	subwf	___awdiv@dividend,w
  1119  01E3                     u865:	
  1120  01E3  1C03               	skipc
  1121  01E4  29EA               	goto	l1711
  1122  01E5  0872               	movf	___awdiv@divisor,w
  1123  01E6  02F4               	subwf	___awdiv@dividend,f
  1124  01E7  0873               	movf	___awdiv@divisor+1,w
  1125  01E8  3BF5               	subwfb	___awdiv@dividend+1,f
  1126  01E9  1478               	bsf	___awdiv@quotient,0
  1127  01EA                     l1711:	
  1128  01EA  36F3               	lsrf	___awdiv@divisor+1,f
  1129  01EB  0CF2               	rrf	___awdiv@divisor,f
  1130  01EC  0BF6               	decfsz	___awdiv@counter,f
  1131  01ED  29DB               	goto	l1703
  1132  01EE                     l1715:	
  1133  01EE  0877               	movf	___awdiv@sign,w
  1134  01EF  1903               	btfsc	3,2
  1135  01F0  29F6               	goto	l1719
  1136  01F1  09F8               	comf	___awdiv@quotient,f
  1137  01F2  09F9               	comf	___awdiv@quotient+1,f
  1138  01F3  0AF8               	incf	___awdiv@quotient,f
  1139  01F4  1903               	skipnz
  1140  01F5  0AF9               	incf	___awdiv@quotient+1,f
  1141  01F6                     l1719:	
  1142  01F6  0879               	movf	___awdiv@quotient+1,w
  1143  01F7  00F3               	movwf	?___awdiv+1
  1144  01F8  0878               	movf	___awdiv@quotient,w
  1145  01F9  00F2               	movwf	?___awdiv
  1146  01FA  0008               	return
  1147  01FB                     __end_of___awdiv:	
  1148  01FB                     __ptext398:	
  1149 ;; *************** function ___lbmod *****************
  1150 ;; Defined at:
  1151 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.12\sources\lbmod.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  dividend        1    wreg     unsigned char 
  1154 ;;  divisor         1    2[COMMON] unsigned char 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  dividend        1    4[COMMON] unsigned char 
  1157 ;;  rem             1    6[COMMON] unsigned char 
  1158 ;;  counter         1    5[COMMON] unsigned char 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      unsigned char 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2, status,0
  1163 ;; Tracked objects:
  1164 ;;		On entry : 1F/0
  1165 ;;		On exit  : 1F/0
  1166 ;;		Unchanged: FFFE0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1168 ;;      Params:         1       0       0       0       0       0       0       0
  1169 ;;      Locals:         3       0       0       0       0       0       0       0
  1170 ;;      Temps:          1       0       0       0       0       0       0       0
  1171 ;;      Totals:         5       0       0       0       0       0       0       0
  1172 ;;Total ram usage:        5 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    2
  1175 ;; This function calls:
  1176 ;;		Nothing
  1177 ;; This function is called by:
  1178 ;;		_put2d
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           
  1183                           ;psect for function ___lbmod
  1184  01FB                     ___lbmod:	
  1185                           
  1186                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  1187                           ;___lbmod@dividend stored from wreg
  1188  01FB  00F4               	movwf	___lbmod@dividend
  1189  01FC  3008               	movlw	8
  1190  01FD  00F5               	movwf	___lbmod@counter
  1191  01FE  01F6               	clrf	___lbmod@rem
  1192  01FF                     l1653:	
  1193  01FF  0874               	movf	___lbmod@dividend,w
  1194  0200  00F3               	movwf	??___lbmod
  1195  0201  3007               	movlw	7
  1196  0202                     u775:	
  1197  0202  36F3               	lsrf	??___lbmod,f
  1198  0203  0B89               	decfsz	9,f
  1199  0204  2A02               	goto	u775
  1200  0205  3576               	lslf	___lbmod@rem,w
  1201  0206  0473               	iorwf	??___lbmod,w
  1202  0207  00F6               	movwf	___lbmod@rem
  1203  0208  35F4               	lslf	___lbmod@dividend,f
  1204  0209  0872               	movf	___lbmod@divisor,w
  1205  020A  0276               	subwf	___lbmod@rem,w
  1206  020B  1C03               	skipc
  1207  020C  2A0F               	goto	l1661
  1208  020D  0872               	movf	___lbmod@divisor,w
  1209  020E  02F6               	subwf	___lbmod@rem,f
  1210  020F                     l1661:	
  1211  020F  0BF5               	decfsz	___lbmod@counter,f
  1212  0210  29FF               	goto	l1653
  1213  0211  0876               	movf	___lbmod@rem,w
  1214  0212  0008               	return
  1215  0213                     __end_of___lbmod:	
  1216  0213                     __ptext397:	
  1217 ;; *************** function ___lbdiv *****************
  1218 ;; Defined at:
  1219 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.12\sources\lbdiv.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;  dividend        1    wreg     unsigned char 
  1222 ;;  divisor         1    2[COMMON] unsigned char 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  dividend        1    3[COMMON] unsigned char 
  1225 ;;  quotient        1    5[COMMON] unsigned char 
  1226 ;;  counter         1    4[COMMON] unsigned char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      unsigned char 
  1229 ;; Registers used:
  1230 ;;		wreg, status,2, status,0
  1231 ;; Tracked objects:
  1232 ;;		On entry : 1F/0
  1233 ;;		On exit  : 1F/0
  1234 ;;		Unchanged: FFFE0/0
  1235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1236 ;;      Params:         1       0       0       0       0       0       0       0
  1237 ;;      Locals:         3       0       0       0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0
  1239 ;;      Totals:         4       0       0       0       0       0       0       0
  1240 ;;Total ram usage:        4 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    2
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_put2d
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           
  1251                           ;psect for function ___lbdiv
  1252  0213                     ___lbdiv:	
  1253                           
  1254                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  1255                           ;___lbdiv@dividend stored from wreg
  1256  0213  00F3               	movwf	___lbdiv@dividend
  1257  0214  01F5               	clrf	___lbdiv@quotient
  1258  0215  0872               	movf	___lbdiv@divisor,w
  1259  0216  1903               	btfsc	3,2
  1260  0217  2A29               	goto	l1645
  1261  0218  01F4               	clrf	___lbdiv@counter
  1262  0219                     l1631:	
  1263  0219  0AF4               	incf	___lbdiv@counter,f
  1264  021A  1BF2               	btfsc	___lbdiv@divisor,7
  1265  021B  2A1E               	goto	l221
  1266  021C  35F2               	lslf	___lbdiv@divisor,f
  1267  021D  2A19               	goto	l1631
  1268  021E                     l221:	
  1269  021E  35F5               	lslf	___lbdiv@quotient,f
  1270  021F  0872               	movf	___lbdiv@divisor,w
  1271  0220  0273               	subwf	___lbdiv@dividend,w
  1272  0221  1C03               	skipc
  1273  0222  2A26               	goto	l1641
  1274  0223  0872               	movf	___lbdiv@divisor,w
  1275  0224  02F3               	subwf	___lbdiv@dividend,f
  1276  0225  1475               	bsf	___lbdiv@quotient,0
  1277  0226                     l1641:	
  1278  0226  36F2               	lsrf	___lbdiv@divisor,f
  1279  0227  0BF4               	decfsz	___lbdiv@counter,f
  1280  0228  2A1E               	goto	l221
  1281  0229                     l1645:	
  1282  0229  0875               	movf	___lbdiv@quotient,w
  1283  022A  0008               	return
  1284  022B                     __end_of___lbdiv:	
  1285  022B                     __ptext390:	
  1286 ;; *************** function _localtime *****************
  1287 ;; Defined at:
  1288 ;;		line 31 in file "../../common/ctime.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  tp              1    wreg     PTR const long 
  1291 ;;		 -> unixtime(4), 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  tp              1   11[BANK0 ] PTR const long 
  1294 ;;		 -> unixtime(4), 
  1295 ;;  t               4   12[BANK0 ] long 
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      PTR struct tm
  1298 ;; Registers used:
  1299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1300 ;; Tracked objects:
  1301 ;;		On entry : 1F/0
  1302 ;;		On exit  : 1F/0
  1303 ;;		Unchanged: FFE00/0
  1304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1305 ;;      Params:         0       0       0       0       0       0       0       0
  1306 ;;      Locals:         0       5       0       0       0       0       0       0
  1307 ;;      Temps:          0       0       0       0       0       0       0       0
  1308 ;;      Totals:         0       5       0       0       0       0       0       0
  1309 ;;Total ram usage:        5 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    5
  1312 ;; This function calls:
  1313 ;;		_gmtime
  1314 ;; This function is called by:
  1315 ;;		_ctime
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           
  1320                           ;psect for function _localtime
  1321  022B                     _localtime:	
  1322                           
  1323                           ; Regs used in _localtime: [wreg+fsr1l-status,0+pclath+cstack]
  1324                           ;localtime@tp stored from wreg
  1325  022B  00DE               	movwf	localtime@tp
  1326  022C  0086               	movwf	6
  1327  022D  0187               	clrf	7
  1328  022E  3F40               	moviw [0]fsr1
  1329  022F  00DF               	movwf	localtime@t
  1330  0230  3F41               	moviw [1]fsr1
  1331  0231  00E0               	movwf	localtime@t+1
  1332  0232  3F42               	moviw [2]fsr1
  1333  0233  00E1               	movwf	localtime@t+2
  1334  0234  3F43               	moviw [3]fsr1
  1335  0235  00E2               	movwf	localtime@t+3
  1336  0236  305F               	movlw	localtime@t& (0+255)
  1337  0237  2A4C               	ljmp	_gmtime
  1338  0238                     __end_of_localtime:	
  1339  0238                     PL6:	
  1340  0238  0081               	movwf	1
  1341  0239  0AD6               	incf	asctime@s,f
  1342  023A  0AD8               	incf	asctime@cp,f
  1343  023B  0858               	movf	asctime@cp,w
  1344  023C  0086               	movwf	6
  1345  023D  0187               	clrf	7
  1346  023E  0856               	movf	asctime@s,w
  1347  023F  0008               	return
  1348  0240                     __end_ofPL6:	
  1349  0240                     PL10:	
  1350  0240  00D3               	movwf	?_put2d
  1351  0241  3030               	movlw	48
  1352  0242  00D4               	movwf	?_put2d+1
  1353  0243  303A               	movlw	58
  1354  0244  00D5               	movwf	?_put2d+2
  1355  0245  0008               	return
  1356  0246                     __end_ofPL10:	
  1357  0246                     PL12:	
  1358  0246  0857               	movf	asctime@tim,w
  1359  0247  3E0A               	addlw	10
  1360  0248  0086               	movwf	6
  1361  0249  0187               	clrf	7
  1362  024A  3F40               	moviw [0]fsr1
  1363  024B  0008               	return
  1364  024C                     __end_ofPL12:	
  1365  024C                     __ptext391:	
  1366 ;; *************** function _gmtime *****************
  1367 ;; Defined at:
  1368 ;;		line 40 in file "../../common/ctime.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  tp              1    wreg     PTR const long 
  1371 ;;		 -> localtime@t(4), 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  tp              1    6[BANK0 ] PTR const long 
  1374 ;;		 -> localtime@t(4), 
  1375 ;;  tc              4    7[BANK0 ] struct .
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      PTR struct tm
  1378 ;; Registers used:
  1379 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 1F/0
  1382 ;;		On exit  : 1F/0
  1383 ;;		Unchanged: FFE00/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1385 ;;      Params:         0       0       0       0       0       0       0       0
  1386 ;;      Locals:         0       5       0       0       0       0       0       0
  1387 ;;      Temps:          1       0       0       0       0       0       0       0
  1388 ;;      Totals:         1       5       0       0       0       0       0       0
  1389 ;;Total ram usage:        6 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    4
  1392 ;; This function calls:
  1393 ;;		___almod
  1394 ;;		___aldiv
  1395 ;;		___awmod
  1396 ;;		_dylen
  1397 ;; This function is called by:
  1398 ;;		_localtime
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _gmtime
  1404  024C                     _gmtime:	
  1405                           
  1406                           ; Regs used in _gmtime: [wreg+fsr1l-status,0+pclath+cstack]
  1407                           ;gmtime@tp stored from wreg
  1408  024C  00D9               	movwf	gmtime@tp
  1409  024D  0086               	movwf	6
  1410  024E  0187               	clrf	7
  1411  024F  3F40               	moviw [0]fsr1
  1412  0250  00DA               	movwf	gmtime@tc
  1413  0251  3F41               	moviw [1]fsr1
  1414  0252  00DB               	movwf	gmtime@tc+1
  1415  0253  3F42               	moviw [2]fsr1
  1416  0254  00DC               	movwf	gmtime@tc+2
  1417  0255  3F43               	moviw [3]fsr1
  1418  0256  00DD               	movwf	gmtime@tc+3
  1419  0257  303C               	movlw	60
  1420  0258  23F9  3180         	fcall	PL2	;call to abstracted procedure
  1421  025A  2353  3180         	fcall	___almod
  1422  025C  0873               	movf	?___almod+1,w
  1423  025D  00BE               	movwf	gmtime@tim+1
  1424  025E  0872               	movf	?___almod,w
  1425  025F  00BD               	movwf	gmtime@tim
  1426  0260  303C               	movlw	60
  1427  0261  2406  3180         	fcall	PL4	;call to abstracted procedure
  1428  0263  22E7  3180         	fcall	___aldiv
  1429  0265  2413  3180         	fcall	PL8	;call to abstracted procedure
  1430  0267  303C               	movlw	60
  1431  0268  23F9  3180         	fcall	PL2	;call to abstracted procedure
  1432  026A  2353  3180         	fcall	___almod
  1433  026C  0873               	movf	?___almod+1,w
  1434  026D  00C0               	movwf	gmtime@tim+3
  1435  026E  0872               	movf	?___almod,w
  1436  026F  00BF               	movwf	gmtime@tim+2
  1437  0270  303C               	movlw	60
  1438  0271  2406  3180         	fcall	PL4	;call to abstracted procedure
  1439  0273  22E7  3180         	fcall	___aldiv
  1440  0275  2413  3180         	fcall	PL8	;call to abstracted procedure
  1441  0277  3018               	movlw	24
  1442  0278  23F9  3180         	fcall	PL2	;call to abstracted procedure
  1443  027A  2353  3180         	fcall	___almod
  1444  027C  0873               	movf	?___almod+1,w
  1445  027D  00C2               	movwf	gmtime@tim+5
  1446  027E  0872               	movf	?___almod,w
  1447  027F  00C1               	movwf	gmtime@tim+4
  1448  0280  3018               	movlw	24
  1449  0281  2406  3180         	fcall	PL4	;call to abstracted procedure
  1450  0283  22E7  3180         	fcall	___aldiv
  1451  0285  0873               	movf	?___aldiv+1,w
  1452  0286  00C4               	movwf	gmtime@tim+7
  1453  0287  0872               	movf	?___aldiv,w
  1454  0288  00C3               	movwf	gmtime@tim+6
  1455  0289  3007               	movlw	7
  1456  028A  00F2               	movwf	?___awmod
  1457  028B  01F3               	clrf	?___awmod+1
  1458  028C  0843               	movf	gmtime@tim+6,w
  1459  028D  3E04               	addlw	4
  1460  028E  00F4               	movwf	?___awmod+2
  1461  028F  3000               	movlw	0
  1462  0290  3D44               	addwfc	gmtime@tim+7,w
  1463  0291  00F5               	movwf	?___awmod+3
  1464  0292  2182  3180         	fcall	___awmod
  1465  0294  0873               	movf	?___awmod+1,w
  1466  0295  00CA               	movwf	gmtime@tim+13
  1467  0296  0872               	movf	?___awmod,w
  1468  0297  00C9               	movwf	gmtime@tim+12
  1469  0298  3046               	movlw	70
  1470  0299  00C7               	movwf	gmtime@tim+10
  1471  029A  01C8               	clrf	gmtime@tim+11
  1472  029B                     l1981:	
  1473  029B  241C  3180         	fcall	PL14	;call to abstracted procedure
  1474  029D  23B4  3180         	fcall	_dylen
  1475  029F  0844               	movf	gmtime@tim+7,w
  1476  02A0  3A80               	xorlw	128
  1477  02A1  00FA               	movwf	??_gmtime
  1478  02A2  0878               	movf	?_dylen+1,w
  1479  02A3  3A80               	xorlw	128
  1480  02A4  027A               	subwf	??_gmtime,w
  1481  02A5  1D03               	skipz
  1482  02A6  2AA9               	goto	u1205
  1483  02A7  0877               	movf	?_dylen,w
  1484  02A8  0243               	subwf	gmtime@tim+6,w
  1485  02A9                     u1205:	
  1486  02A9  1C03               	btfss	3,0
  1487  02AA  2AB8               	goto	l1983
  1488  02AB  0020               	movlb	0	; select bank0
  1489  02AC  241C  3180         	fcall	PL14	;call to abstracted procedure
  1490  02AE  23B4  3180         	fcall	_dylen
  1491  02B0  0877               	movf	?_dylen,w
  1492  02B1  02C3               	subwf	gmtime@tim+6,f
  1493  02B2  0878               	movf	?_dylen+1,w
  1494  02B3  3BC4               	subwfb	gmtime@tim+7,f
  1495  02B4  0AC7               	incf	gmtime@tim+10,f
  1496  02B5  1903               	skipnz
  1497  02B6  0AC8               	incf	gmtime@tim+11,f
  1498  02B7  2A9B               	goto	l1981
  1499  02B8                     l1983:	
  1500  02B8  0020               	movlb	0	; select bank0
  1501  02B9  241C  3180         	fcall	PL14	;call to abstracted procedure
  1502  02BB  23B4               	fcall	_dylen
  1503  02BC  0877               	movf	?_dylen,w
  1504  02BD  00DA               	movwf	gmtime@tc
  1505  02BE  3002               	movlw	2
  1506  02BF  05DA               	andwf	gmtime@tc,f
  1507  02C0  0844               	movf	gmtime@tim+7,w
  1508  02C1  00CC               	movwf	gmtime@tim+15
  1509  02C2  0843               	movf	gmtime@tim+6,w
  1510  02C3  00CB               	movwf	gmtime@tim+14
  1511  02C4  01C5               	clrf	gmtime@tim+8
  1512  02C5  01C6               	clrf	gmtime@tim+9
  1513  02C6                     l167:	
  1514  02C6  0845               	movf	gmtime@tim+8,w
  1515  02C7  3E26               	addlw	low (_moninit| (0+32768))
  1516  02C8  3184               	movlp	high __stringtab
  1517  02C9  000A               	callw
  1518  02CA  3180               	pagesel	$	;select current page
  1519  02CB  045A               	iorwf	gmtime@tc,w
  1520  02CC  00DB               	movwf	gmtime@tc+1
  1521  02CD  0844               	movf	gmtime@tim+7,w
  1522  02CE  3A80               	xorlw	128
  1523  02CF  00FA               	movwf	??_gmtime
  1524  02D0  3080               	movlw	128
  1525  02D1  027A               	subwf	??_gmtime,w
  1526  02D2  1D03               	skipz
  1527  02D3  2AD6               	goto	u1215
  1528  02D4  085B               	movf	gmtime@tc+1,w
  1529  02D5  0243               	subwf	gmtime@tim+6,w
  1530  02D6                     u1215:	
  1531  02D6  1C03               	btfss	3,0
  1532  02D7  2AE2               	goto	l1997
  1533  02D8  0020               	movlb	0	; select bank0
  1534  02D9  085B               	movf	gmtime@tc+1,w
  1535  02DA  02C3               	subwf	gmtime@tim+6,f
  1536  02DB  1C03               	skipc
  1537  02DC  03C4               	decf	gmtime@tim+7,f
  1538  02DD  0AC5               	incf	gmtime@tim+8,f
  1539  02DE  1903               	skipnz
  1540  02DF  0AC6               	incf	gmtime@tim+9,f
  1541  02E0  36DA               	lsrf	gmtime@tc,f
  1542  02E1  2AC6               	goto	l167
  1543  02E2                     l1997:	
  1544  02E2  0020               	movlb	0	; select bank0
  1545  02E3  0AC3               	incf	gmtime@tim+6,f
  1546  02E4  1903               	skipnz
  1547  02E5  0AC4               	incf	gmtime@tim+7,f
  1548  02E6  343D               	retlw	gmtime@tim& (0+255)
  1549  02E7                     __end_of_gmtime:	
  1550  02E7                     __ptext401:	
  1551 ;; *************** function ___aldiv *****************
  1552 ;; Defined at:
  1553 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.12\sources\aldiv.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  divisor         4    2[COMMON] long 
  1556 ;;  dividend        4    6[COMMON] long 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  quotient        4    2[BANK0 ] long 
  1559 ;;  sign            1    1[BANK0 ] unsigned char 
  1560 ;;  counter         1    0[BANK0 ] unsigned char 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  4    2[COMMON] long 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0
  1565 ;; Tracked objects:
  1566 ;;		On entry : 1F/0
  1567 ;;		On exit  : 1F/0
  1568 ;;		Unchanged: FFFE0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1570 ;;      Params:         8       0       0       0       0       0       0       0
  1571 ;;      Locals:         0       6       0       0       0       0       0       0
  1572 ;;      Temps:          0       0       0       0       0       0       0       0
  1573 ;;      Totals:         8       6       0       0       0       0       0       0
  1574 ;;Total ram usage:       14 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    2
  1577 ;; This function calls:
  1578 ;;		Nothing
  1579 ;; This function is called by:
  1580 ;;		_gmtime
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           
  1585                           ;psect for function ___aldiv
  1586  02E7                     ___aldiv:	
  1587                           
  1588                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1589  02E7  01D4               	clrf	___aldiv@sign
  1590  02E8  1FF5               	btfss	___aldiv@divisor+3,7
  1591  02E9  2AF7               	goto	l386
  1592  02EA  09F2               	comf	___aldiv@divisor,f
  1593  02EB  09F3               	comf	___aldiv@divisor+1,f
  1594  02EC  09F4               	comf	___aldiv@divisor+2,f
  1595  02ED  09F5               	comf	___aldiv@divisor+3,f
  1596  02EE  0AF2               	incf	___aldiv@divisor,f
  1597  02EF  1903               	skipnz
  1598  02F0  0AF3               	incf	___aldiv@divisor+1,f
  1599  02F1  1903               	skipnz
  1600  02F2  0AF4               	incf	___aldiv@divisor+2,f
  1601  02F3  1903               	skipnz
  1602  02F4  0AF5               	incf	___aldiv@divisor+3,f
  1603  02F5  01D4               	clrf	___aldiv@sign
  1604  02F6  0AD4               	incf	___aldiv@sign,f
  1605  02F7                     l386:	
  1606  02F7  1FF9               	btfss	___aldiv@dividend+3,7
  1607  02F8  2B06               	goto	l1765
  1608  02F9  09F6               	comf	___aldiv@dividend,f
  1609  02FA  09F7               	comf	___aldiv@dividend+1,f
  1610  02FB  09F8               	comf	___aldiv@dividend+2,f
  1611  02FC  09F9               	comf	___aldiv@dividend+3,f
  1612  02FD  0AF6               	incf	___aldiv@dividend,f
  1613  02FE  1903               	skipnz
  1614  02FF  0AF7               	incf	___aldiv@dividend+1,f
  1615  0300  1903               	skipnz
  1616  0301  0AF8               	incf	___aldiv@dividend+2,f
  1617  0302  1903               	skipnz
  1618  0303  0AF9               	incf	___aldiv@dividend+3,f
  1619  0304  3001               	movlw	1
  1620  0305  06D4               	xorwf	___aldiv@sign,f
  1621  0306                     l1765:	
  1622  0306  01D5               	clrf	___aldiv@quotient
  1623  0307  01D6               	clrf	___aldiv@quotient+1
  1624  0308  01D7               	clrf	___aldiv@quotient+2
  1625  0309  01D8               	clrf	___aldiv@quotient+3
  1626  030A  0875               	movf	___aldiv@divisor+3,w
  1627  030B  0474               	iorwf	___aldiv@divisor+2,w
  1628  030C  0473               	iorwf	___aldiv@divisor+1,w
  1629  030D  0472               	iorwf	___aldiv@divisor,w
  1630  030E  1903               	skipnz
  1631  030F  2B3C               	goto	l1787
  1632  0310  01D3               	clrf	___aldiv@counter
  1633  0311                     L4:	
  1634  0311  0AD3               	incf	___aldiv@counter,f
  1635  0312  1BF5               	btfsc	___aldiv@divisor+3,7
  1636  0313  2B19               	goto	l1775
  1637  0314  35F2               	lslf	___aldiv@divisor,f
  1638  0315  0DF3               	rlf	___aldiv@divisor+1,f
  1639  0316  0DF4               	rlf	___aldiv@divisor+2,f
  1640  0317  0DF5               	rlf	___aldiv@divisor+3,f
  1641  0318  2B11               	goto	L4
  1642  0319                     l1775:	
  1643  0319  35D5               	lslf	___aldiv@quotient,f
  1644  031A  0DD6               	rlf	___aldiv@quotient+1,f
  1645  031B  0DD7               	rlf	___aldiv@quotient+2,f
  1646  031C  0DD8               	rlf	___aldiv@quotient+3,f
  1647  031D  0875               	movf	___aldiv@divisor+3,w
  1648  031E  0279               	subwf	___aldiv@dividend+3,w
  1649  031F  1D03               	skipz
  1650  0320  2B2B               	goto	u1005
  1651  0321  0874               	movf	___aldiv@divisor+2,w
  1652  0322  0278               	subwf	___aldiv@dividend+2,w
  1653  0323  1D03               	skipz
  1654  0324  2B2B               	goto	u1005
  1655  0325  0873               	movf	___aldiv@divisor+1,w
  1656  0326  0277               	subwf	___aldiv@dividend+1,w
  1657  0327  1D03               	skipz
  1658  0328  2B2B               	goto	u1005
  1659  0329  0872               	movf	___aldiv@divisor,w
  1660  032A  0276               	subwf	___aldiv@dividend,w
  1661  032B                     u1005:	
  1662  032B  1C03               	skipc
  1663  032C  2B36               	goto	l1783
  1664  032D  0872               	movf	___aldiv@divisor,w
  1665  032E  02F6               	subwf	___aldiv@dividend,f
  1666  032F  0873               	movf	___aldiv@divisor+1,w
  1667  0330  3BF7               	subwfb	___aldiv@dividend+1,f
  1668  0331  0874               	movf	___aldiv@divisor+2,w
  1669  0332  3BF8               	subwfb	___aldiv@dividend+2,f
  1670  0333  0875               	movf	___aldiv@divisor+3,w
  1671  0334  3BF9               	subwfb	___aldiv@dividend+3,f
  1672  0335  1455               	bsf	___aldiv@quotient,0
  1673  0336                     l1783:	
  1674  0336  36F5               	lsrf	___aldiv@divisor+3,f
  1675  0337  0CF4               	rrf	___aldiv@divisor+2,f
  1676  0338  0CF3               	rrf	___aldiv@divisor+1,f
  1677  0339  0CF2               	rrf	___aldiv@divisor,f
  1678  033A  0BD3               	decfsz	___aldiv@counter,f
  1679  033B  2B19               	goto	l1775
  1680  033C                     l1787:	
  1681  033C  0854               	movf	___aldiv@sign,w
  1682  033D  1903               	btfsc	3,2
  1683  033E  2B4A               	goto	l1791
  1684  033F  09D5               	comf	___aldiv@quotient,f
  1685  0340  09D6               	comf	___aldiv@quotient+1,f
  1686  0341  09D7               	comf	___aldiv@quotient+2,f
  1687  0342  09D8               	comf	___aldiv@quotient+3,f
  1688  0343  0AD5               	incf	___aldiv@quotient,f
  1689  0344  1903               	skipnz
  1690  0345  0AD6               	incf	___aldiv@quotient+1,f
  1691  0346  1903               	skipnz
  1692  0347  0AD7               	incf	___aldiv@quotient+2,f
  1693  0348  1903               	skipnz
  1694  0349  0AD8               	incf	___aldiv@quotient+3,f
  1695  034A                     l1791:	
  1696  034A  0858               	movf	___aldiv@quotient+3,w
  1697  034B  00F5               	movwf	?___aldiv+3
  1698  034C  0857               	movf	___aldiv@quotient+2,w
  1699  034D  00F4               	movwf	?___aldiv+2
  1700  034E  0856               	movf	___aldiv@quotient+1,w
  1701  034F  00F3               	movwf	?___aldiv+1
  1702  0350  0855               	movf	___aldiv@quotient,w
  1703  0351  00F2               	movwf	?___aldiv
  1704  0352  0008               	return
  1705  0353                     __end_of___aldiv:	
  1706  0353                     __ptext400:	
  1707 ;; *************** function ___almod *****************
  1708 ;; Defined at:
  1709 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.12\sources\almod.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  divisor         4    2[COMMON] long 
  1712 ;;  dividend        4    6[COMMON] long 
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  sign            1    1[BANK0 ] unsigned char 
  1715 ;;  counter         1    0[BANK0 ] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  4    2[COMMON] long 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0
  1720 ;; Tracked objects:
  1721 ;;		On entry : 1F/0
  1722 ;;		On exit  : 1F/0
  1723 ;;		Unchanged: FFFE0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1725 ;;      Params:         8       0       0       0       0       0       0       0
  1726 ;;      Locals:         0       2       0       0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0
  1728 ;;      Totals:         8       2       0       0       0       0       0       0
  1729 ;;Total ram usage:       10 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    2
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_gmtime
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           
  1740                           ;psect for function ___almod
  1741  0353                     ___almod:	
  1742                           
  1743                           ; Regs used in ___almod: [wreg+status,2+status,0]
  1744  0353  01D4               	clrf	___almod@sign
  1745  0354  1FF9               	btfss	___almod@dividend+3,7
  1746  0355  2B63               	goto	l373
  1747  0356  09F6               	comf	___almod@dividend,f
  1748  0357  09F7               	comf	___almod@dividend+1,f
  1749  0358  09F8               	comf	___almod@dividend+2,f
  1750  0359  09F9               	comf	___almod@dividend+3,f
  1751  035A  0AF6               	incf	___almod@dividend,f
  1752  035B  1903               	skipnz
  1753  035C  0AF7               	incf	___almod@dividend+1,f
  1754  035D  1903               	skipnz
  1755  035E  0AF8               	incf	___almod@dividend+2,f
  1756  035F  1903               	skipnz
  1757  0360  0AF9               	incf	___almod@dividend+3,f
  1758  0361  01D4               	clrf	___almod@sign
  1759  0362  0AD4               	incf	___almod@sign,f
  1760  0363                     l373:	
  1761  0363  1FF5               	btfss	___almod@divisor+3,7
  1762  0364  2B70               	goto	l2011
  1763  0365  09F2               	comf	___almod@divisor,f
  1764  0366  09F3               	comf	___almod@divisor+1,f
  1765  0367  09F4               	comf	___almod@divisor+2,f
  1766  0368  09F5               	comf	___almod@divisor+3,f
  1767  0369  0AF2               	incf	___almod@divisor,f
  1768  036A  1903               	skipnz
  1769  036B  0AF3               	incf	___almod@divisor+1,f
  1770  036C  1903               	skipnz
  1771  036D  0AF4               	incf	___almod@divisor+2,f
  1772  036E  1903               	skipnz
  1773  036F  0AF5               	incf	___almod@divisor+3,f
  1774  0370                     l2011:	
  1775  0370  0875               	movf	___almod@divisor+3,w
  1776  0371  0474               	iorwf	___almod@divisor+2,w
  1777  0372  0473               	iorwf	___almod@divisor+1,w
  1778  0373  0472               	iorwf	___almod@divisor,w
  1779  0374  1903               	skipnz
  1780  0375  2B9D               	goto	l2027
  1781  0376  01D3               	clrf	___almod@counter
  1782  0377                     L3:	
  1783  0377  0AD3               	incf	___almod@counter,f
  1784  0378  1BF5               	btfsc	___almod@divisor+3,7
  1785  0379  2B7F               	goto	l2019
  1786  037A  35F2               	lslf	___almod@divisor,f
  1787  037B  0DF3               	rlf	___almod@divisor+1,f
  1788  037C  0DF4               	rlf	___almod@divisor+2,f
  1789  037D  0DF5               	rlf	___almod@divisor+3,f
  1790  037E  2B77               	goto	L3
  1791  037F                     l2019:	
  1792  037F  0875               	movf	___almod@divisor+3,w
  1793  0380  0279               	subwf	___almod@dividend+3,w
  1794  0381  1D03               	skipz
  1795  0382  2B8D               	goto	u1265
  1796  0383  0874               	movf	___almod@divisor+2,w
  1797  0384  0278               	subwf	___almod@dividend+2,w
  1798  0385  1D03               	skipz
  1799  0386  2B8D               	goto	u1265
  1800  0387  0873               	movf	___almod@divisor+1,w
  1801  0388  0277               	subwf	___almod@dividend+1,w
  1802  0389  1D03               	skipz
  1803  038A  2B8D               	goto	u1265
  1804  038B  0872               	movf	___almod@divisor,w
  1805  038C  0276               	subwf	___almod@dividend,w
  1806  038D                     u1265:	
  1807  038D  1C03               	skipc
  1808  038E  2B97               	goto	l2023
  1809  038F  0872               	movf	___almod@divisor,w
  1810  0390  02F6               	subwf	___almod@dividend,f
  1811  0391  0873               	movf	___almod@divisor+1,w
  1812  0392  3BF7               	subwfb	___almod@dividend+1,f
  1813  0393  0874               	movf	___almod@divisor+2,w
  1814  0394  3BF8               	subwfb	___almod@dividend+2,f
  1815  0395  0875               	movf	___almod@divisor+3,w
  1816  0396  3BF9               	subwfb	___almod@dividend+3,f
  1817  0397                     l2023:	
  1818  0397  36F5               	lsrf	___almod@divisor+3,f
  1819  0398  0CF4               	rrf	___almod@divisor+2,f
  1820  0399  0CF3               	rrf	___almod@divisor+1,f
  1821  039A  0CF2               	rrf	___almod@divisor,f
  1822  039B  0BD3               	decfsz	___almod@counter,f
  1823  039C  2B7F               	goto	l2019
  1824  039D                     l2027:	
  1825  039D  0854               	movf	___almod@sign,w
  1826  039E  1903               	btfsc	3,2
  1827  039F  2BAB               	goto	l2031
  1828  03A0  09F6               	comf	___almod@dividend,f
  1829  03A1  09F7               	comf	___almod@dividend+1,f
  1830  03A2  09F8               	comf	___almod@dividend+2,f
  1831  03A3  09F9               	comf	___almod@dividend+3,f
  1832  03A4  0AF6               	incf	___almod@dividend,f
  1833  03A5  1903               	skipnz
  1834  03A6  0AF7               	incf	___almod@dividend+1,f
  1835  03A7  1903               	skipnz
  1836  03A8  0AF8               	incf	___almod@dividend+2,f
  1837  03A9  1903               	skipnz
  1838  03AA  0AF9               	incf	___almod@dividend+3,f
  1839  03AB                     l2031:	
  1840  03AB  0879               	movf	___almod@dividend+3,w
  1841  03AC  00F5               	movwf	?___almod+3
  1842  03AD  0878               	movf	___almod@dividend+2,w
  1843  03AE  00F4               	movwf	?___almod+2
  1844  03AF  0877               	movf	___almod@dividend+1,w
  1845  03B0  00F3               	movwf	?___almod+1
  1846  03B1  0876               	movf	___almod@dividend,w
  1847  03B2  00F2               	movwf	?___almod
  1848  03B3  0008               	return
  1849  03B4                     __end_of___almod:	
  1850  03B4                     __ptext392:	
  1851 ;; *************** function _dylen *****************
  1852 ;; Defined at:
  1853 ;;		line 23 in file "../../common/ctime.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;  yr              2    7[COMMON] unsigned int 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  2    7[COMMON] int 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2, status,0, pclath, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 1F/0
  1864 ;;		On exit  : 1F/0
  1865 ;;		Unchanged: FFFE0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1867 ;;      Params:         2       0       0       0       0       0       0       0
  1868 ;;      Locals:         0       0       0       0       0       0       0       0
  1869 ;;      Temps:          0       0       0       0       0       0       0       0
  1870 ;;      Totals:         2       0       0       0       0       0       0       0
  1871 ;;Total ram usage:        2 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    3
  1874 ;; This function calls:
  1875 ;;		___lwmod
  1876 ;; This function is called by:
  1877 ;;		_gmtime
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           
  1882                           ;psect for function _dylen
  1883  03B4                     _dylen:	
  1884                           
  1885                           ; Regs used in _dylen: [wreg+status,2+status,0+pclath+cstack]
  1886  03B4  0877               	movf	dylen@yr,w
  1887  03B5  3903               	andlw	3
  1888  03B6  1D03               	btfss	3,2
  1889  03B7  2BD5               	goto	l1473
  1890  03B8  3064               	movlw	100
  1891  03B9  00F2               	movwf	?___lwmod
  1892  03BA  01F3               	clrf	?___lwmod+1
  1893  03BB  0878               	movf	dylen@yr+1,w
  1894  03BC  00F5               	movwf	?___lwmod+3
  1895  03BD  0877               	movf	dylen@yr,w
  1896  03BE  00F4               	movwf	?___lwmod+2
  1897  03BF  23D9  3180         	fcall	___lwmod
  1898  03C1  0873               	movf	?___lwmod+1,w
  1899  03C2  0472               	iorwf	?___lwmod,w
  1900  03C3  1D03               	skipz
  1901  03C4  2BD7               	goto	l1477
  1902  03C5  3090               	movlw	144
  1903  03C6  00F2               	movwf	?___lwmod
  1904  03C7  3001               	movlw	1
  1905  03C8  00F3               	movwf	?___lwmod+1
  1906  03C9  0877               	movf	dylen@yr,w
  1907  03CA  3E2C               	addlw	44
  1908  03CB  00F4               	movwf	?___lwmod+2
  1909  03CC  3001               	movlw	1
  1910  03CD  3D78               	addwfc	dylen@yr+1,w
  1911  03CE  00F5               	movwf	?___lwmod+3
  1912  03CF  23D9  3180         	fcall	___lwmod
  1913  03D1  0873               	movf	?___lwmod+1,w
  1914  03D2  0472               	iorwf	?___lwmod,w
  1915  03D3  1903               	skipnz
  1916  03D4  2BD7               	goto	l1477
  1917  03D5                     l1473:	
  1918  03D5  306D               	movlw	109
  1919  03D6  2C21               	ljmp	PL16	;call to abstracted procedure
  1920  03D7                     l1477:	
  1921  03D7  306E               	movlw	110
  1922  03D8  2C21               	ljmp	PL16	;call to abstracted procedure
  1923  03D9                     __end_of_dylen:	
  1924  03D9                     __ptext396:	
  1925 ;; *************** function ___lwmod *****************
  1926 ;; Defined at:
  1927 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.12\sources\lwmod.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  divisor         2    2[COMMON] unsigned int 
  1930 ;;  dividend        2    4[COMMON] unsigned int 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;  counter         1    6[COMMON] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  2    2[COMMON] unsigned int 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0
  1937 ;; Tracked objects:
  1938 ;;		On entry : 1F/0
  1939 ;;		On exit  : 1F/0
  1940 ;;		Unchanged: FFFE0/0
  1941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1942 ;;      Params:         4       0       0       0       0       0       0       0
  1943 ;;      Locals:         1       0       0       0       0       0       0       0
  1944 ;;      Temps:          0       0       0       0       0       0       0       0
  1945 ;;      Totals:         5       0       0       0       0       0       0       0
  1946 ;;Total ram usage:        5 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    2
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_dylen
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           
  1957                           ;psect for function ___lwmod
  1958  03D9                     ___lwmod:	
  1959                           
  1960                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1961  03D9  0873               	movf	___lwmod@divisor+1,w
  1962  03DA  0472               	iorwf	___lwmod@divisor,w
  1963  03DB  1903               	skipnz
  1964  03DC  2BF4               	goto	l1621
  1965  03DD  01F6               	clrf	___lwmod@counter
  1966  03DE                     L1:	
  1967  03DE  0AF6               	incf	___lwmod@counter,f
  1968  03DF  1BF3               	btfsc	___lwmod@divisor+1,7
  1969  03E0  2BE4               	goto	l1613
  1970  03E1  35F2               	lslf	___lwmod@divisor,f
  1971  03E2  0DF3               	rlf	___lwmod@divisor+1,f
  1972  03E3  2BDE               	goto	L1
  1973  03E4                     l1613:	
  1974  03E4  0873               	movf	___lwmod@divisor+1,w
  1975  03E5  0275               	subwf	___lwmod@dividend+1,w
  1976  03E6  1D03               	skipz
  1977  03E7  2BEA               	goto	u715
  1978  03E8  0872               	movf	___lwmod@divisor,w
  1979  03E9  0274               	subwf	___lwmod@dividend,w
  1980  03EA                     u715:	
  1981  03EA  1C03               	skipc
  1982  03EB  2BF0               	goto	l1617
  1983  03EC  0872               	movf	___lwmod@divisor,w
  1984  03ED  02F4               	subwf	___lwmod@dividend,f
  1985  03EE  0873               	movf	___lwmod@divisor+1,w
  1986  03EF  3BF5               	subwfb	___lwmod@dividend+1,f
  1987  03F0                     l1617:	
  1988  03F0  36F3               	lsrf	___lwmod@divisor+1,f
  1989  03F1  0CF2               	rrf	___lwmod@divisor,f
  1990  03F2  0BF6               	decfsz	___lwmod@counter,f
  1991  03F3  2BE4               	goto	l1613
  1992  03F4                     l1621:	
  1993  03F4  0875               	movf	___lwmod@dividend+1,w
  1994  03F5  00F3               	movwf	?___lwmod+1
  1995  03F6  0874               	movf	___lwmod@dividend,w
  1996  03F7  00F2               	movwf	?___lwmod
  1997  03F8  0008               	return
  1998  03F9                     __end_of___lwmod:	
  1999  03F9                     PL2:	
  2000  03F9  00F2               	movwf	?___almod
  2001  03FA  01F3               	clrf	?___almod+1
  2002  03FB  01F4               	clrf	?___almod+2
  2003  03FC  01F5               	clrf	?___almod+3
  2004  03FD  085D               	movf	gmtime@tc+3,w
  2005  03FE  00F9               	movwf	?___almod+7
  2006  03FF  085C               	movf	gmtime@tc+2,w
  2007  0400  00F8               	movwf	?___almod+6
  2008  0401  085B               	movf	gmtime@tc+1,w
  2009  0402  00F7               	movwf	?___almod+5
  2010  0403  085A               	movf	gmtime@tc,w
  2011  0404  00F6               	movwf	?___almod+4
  2012  0405  0008               	return
  2013  0406                     __end_ofPL2:	
  2014  0406                     PL4:	
  2015  0406  00F2               	movwf	?___aldiv
  2016  0407  01F3               	clrf	?___aldiv+1
  2017  0408  01F4               	clrf	?___aldiv+2
  2018  0409  01F5               	clrf	?___aldiv+3
  2019  040A  085D               	movf	gmtime@tc+3,w
  2020  040B  00F9               	movwf	?___aldiv+7
  2021  040C  085C               	movf	gmtime@tc+2,w
  2022  040D  00F8               	movwf	?___aldiv+6
  2023  040E  085B               	movf	gmtime@tc+1,w
  2024  040F  00F7               	movwf	?___aldiv+5
  2025  0410  085A               	movf	gmtime@tc,w
  2026  0411  00F6               	movwf	?___aldiv+4
  2027  0412  0008               	return
  2028  0413                     __end_ofPL4:	
  2029  0413                     PL8:	
  2030  0413  0875               	movf	?___aldiv+3,w
  2031  0414  00DD               	movwf	gmtime@tc+3
  2032  0415  0874               	movf	?___aldiv+2,w
  2033  0416  00DC               	movwf	gmtime@tc+2
  2034  0417  0873               	movf	?___aldiv+1,w
  2035  0418  00DB               	movwf	gmtime@tc+1
  2036  0419  0872               	movf	?___aldiv,w
  2037  041A  00DA               	movwf	gmtime@tc
  2038  041B  0008               	return
  2039  041C                     __end_ofPL8:	
  2040  041C                     PL14:	
  2041  041C  0848               	movf	gmtime@tim+11,w
  2042  041D  00F8               	movwf	?_dylen+1
  2043  041E  0847               	movf	gmtime@tim+10,w
  2044  041F  00F7               	movwf	?_dylen
  2045  0420  0008               	return
  2046  0421                     __end_ofPL14:	
  2047  0421                     PL16:	
  2048  0421  00F7               	movwf	?_dylen
  2049  0422  3001               	movlw	1
  2050  0423  00F8               	movwf	?_dylen+1
  2051  0424  0008               	return
  2052  0425                     __end_ofPL16:	
  2053                           
  2054                           	psect	bitbssCOMMON
  2055  03D8                     __pbitbssCOMMON:	
  2056  03D8                     _t_active:	
  2057  03D8                     	ds	1
  2058                           
  2059                           	psect	bssBANK0
  2060  0020                     __pbssBANK0:	
  2061  0020                     _st:	
  2062  0020                     	ds	1
  2063  0021                     _txpos:	
  2064  0021                     	ds	1
  2065  0022                     asctime@buf:	
  2066  0022                     	ds	27
  2067  003D                     gmtime@tim:	
  2068  003D                     	ds	18
  2069  004F                     _unixtime:	
  2070  004F                     	ds	4
  2071                           
  2072                           	psect	bssBANK1
  2073  00A0                     __pbssBANK1:	
  2074  00A0                     _rxbufer:	
  2075  00A0                     	ds	30
  2076  00BE                     _txbufer:	
  2077  00BE                     	ds	30
  2078                           
  2079                           	psect	clrtext
  2080  0490                     clear_ram:	
  2081                           ;	Called with FSR0 containing the base address, and
  2082                           ;	WREG with the size to clear
  2083                           
  2084  0490  0064               	clrwdt	;clear the watchdog before getting into this loop
  2085  0491                     clrloop:	
  2086  0491  0180               	clrf	0	;clear RAM location pointed to by FSR
  2087  0492  3101               	addfsr 0,1
  2088  0493  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2089  0494  2C91               	goto	clrloop	;have we reached the end yet?
  2090  0495  3400               	retlw	0	;all done for this memory range, return
  2091                           
  2092                           	psect	cstackCOMMON
  2093  0070                     __pcstackCOMMON:	
  2094  0070                     ?_term:	
  2095  0070                     ??_term:	
  2096                           ; 0 bytes @ 0x0
  2097                           
  2098  0070                     ?_main:	
  2099                           ; 0 bytes @ 0x0
  2100                           
  2101  0070                     ?_isr:	
  2102                           ; 0 bytes @ 0x0
  2103                           
  2104  0070                     ?_ctime:	
  2105                           ; 0 bytes @ 0x0
  2106                           
  2107  0070                     ?_gmtime:	
  2108                           ; 1 bytes @ 0x0
  2109                           
  2110  0070                     ?_localtime:	
  2111                           ; 1 bytes @ 0x0
  2112                           
  2113  0070                     ?_asctime:	
  2114                           ; 1 bytes @ 0x0
  2115                           
  2116  0070                     term@t:	
  2117                           ; 1 bytes @ 0x0
  2118                           
  2119                           
  2120                           ; 1 bytes @ 0x0
  2121  0070                     	ds	1
  2122  0071                     ??_isr:	
  2123  0071                     isr@bufer:	
  2124                           ; 0 bytes @ 0x1
  2125                           
  2126                           
  2127                           ; 1 bytes @ 0x1
  2128  0071                     	ds	1
  2129  0072                     ?___bmul:	
  2130  0072                     ?___lbdiv:	
  2131                           ; 1 bytes @ 0x2
  2132                           
  2133  0072                     ?___lbmod:	
  2134                           ; 1 bytes @ 0x2
  2135                           
  2136  0072                     ?___lwmod:	
  2137                           ; 1 bytes @ 0x2
  2138                           
  2139  0072                     ?___awdiv:	
  2140                           ; 2 bytes @ 0x2
  2141                           
  2142  0072                     ?___awmod:	
  2143                           ; 2 bytes @ 0x2
  2144                           
  2145  0072                     ?___almod:	
  2146                           ; 2 bytes @ 0x2
  2147                           
  2148  0072                     ?___aldiv:	
  2149                           ; 4 bytes @ 0x2
  2150                           
  2151  0072                     ___bmul@multiplicand:	
  2152                           ; 4 bytes @ 0x2
  2153                           
  2154  0072                     ___lbdiv@divisor:	
  2155                           ; 1 bytes @ 0x2
  2156                           
  2157  0072                     ___lbmod@divisor:	
  2158                           ; 1 bytes @ 0x2
  2159                           
  2160  0072                     ___lwmod@divisor:	
  2161                           ; 1 bytes @ 0x2
  2162                           
  2163  0072                     ___awdiv@divisor:	
  2164                           ; 2 bytes @ 0x2
  2165                           
  2166  0072                     ___awmod@divisor:	
  2167                           ; 2 bytes @ 0x2
  2168                           
  2169  0072                     ___almod@divisor:	
  2170                           ; 2 bytes @ 0x2
  2171                           
  2172  0072                     ___aldiv@divisor:	
  2173                           ; 4 bytes @ 0x2
  2174                           
  2175                           
  2176                           ; 4 bytes @ 0x2
  2177  0072                     	ds	1
  2178  0073                     ??___bmul:	
  2179  0073                     ??___lbdiv:	
  2180                           ; 0 bytes @ 0x3
  2181                           
  2182  0073                     ??___lbmod:	
  2183                           ; 0 bytes @ 0x3
  2184                           
  2185  0073                     ___bmul@product:	
  2186                           ; 0 bytes @ 0x3
  2187                           
  2188  0073                     ___lbdiv@dividend:	
  2189                           ; 1 bytes @ 0x3
  2190                           
  2191                           
  2192                           ; 1 bytes @ 0x3
  2193  0073                     	ds	1
  2194  0074                     ___bmul@multiplier:	
  2195  0074                     ___lbdiv@counter:	
  2196                           ; 1 bytes @ 0x4
  2197                           
  2198  0074                     ___lbmod@dividend:	
  2199                           ; 1 bytes @ 0x4
  2200                           
  2201  0074                     ___lwmod@dividend:	
  2202                           ; 1 bytes @ 0x4
  2203                           
  2204  0074                     ___awdiv@dividend:	
  2205                           ; 2 bytes @ 0x4
  2206                           
  2207  0074                     ___awmod@dividend:	
  2208                           ; 2 bytes @ 0x4
  2209                           
  2210                           
  2211                           ; 2 bytes @ 0x4
  2212  0074                     	ds	1
  2213  0075                     ___lbdiv@quotient:	
  2214  0075                     ___lbmod@counter:	
  2215                           ; 1 bytes @ 0x5
  2216                           
  2217                           
  2218                           ; 1 bytes @ 0x5
  2219  0075                     	ds	1
  2220  0076                     ??___lwmod:	
  2221  0076                     ??___awdiv:	
  2222                           ; 0 bytes @ 0x6
  2223                           
  2224  0076                     ??___awmod:	
  2225                           ; 0 bytes @ 0x6
  2226                           
  2227  0076                     ___lwmod@counter:	
  2228                           ; 0 bytes @ 0x6
  2229                           
  2230  0076                     ___lbmod@rem:	
  2231                           ; 1 bytes @ 0x6
  2232                           
  2233  0076                     ___awdiv@counter:	
  2234                           ; 1 bytes @ 0x6
  2235                           
  2236  0076                     ___awmod@counter:	
  2237                           ; 1 bytes @ 0x6
  2238                           
  2239  0076                     ___almod@dividend:	
  2240                           ; 1 bytes @ 0x6
  2241                           
  2242  0076                     ___aldiv@dividend:	
  2243                           ; 4 bytes @ 0x6
  2244                           
  2245                           
  2246                           ; 4 bytes @ 0x6
  2247  0076                     	ds	1
  2248  0077                     ?_dylen:	
  2249  0077                     ___awdiv@sign:	
  2250                           ; 2 bytes @ 0x7
  2251                           
  2252  0077                     ___awmod@sign:	
  2253                           ; 1 bytes @ 0x7
  2254                           
  2255  0077                     dylen@yr:	
  2256                           ; 1 bytes @ 0x7
  2257                           
  2258                           
  2259                           ; 2 bytes @ 0x7
  2260  0077                     	ds	1
  2261  0078                     ___awdiv@quotient:	
  2262                           
  2263                           ; 2 bytes @ 0x8
  2264  0078                     	ds	1
  2265  0079                     ??_dylen:	
  2266                           
  2267                           ; 0 bytes @ 0x9
  2268  0079                     	ds	1
  2269  007A                     ??_gmtime:	
  2270  007A                     ??_put2d:	
  2271                           ; 0 bytes @ 0xA
  2272                           
  2273  007A                     ??___almod:	
  2274                           ; 0 bytes @ 0xA
  2275                           
  2276  007A                     ??___aldiv:	
  2277                           ; 0 bytes @ 0xA
  2278                           
  2279  007A                     put2d@cp:	
  2280                           ; 0 bytes @ 0xA
  2281                           
  2282                           
  2283                           ; 1 bytes @ 0xA
  2284  007A                     	ds	1
  2285  007B                     ??_ctime:	
  2286  007B                     ??_main:	
  2287                           ; 0 bytes @ 0xB
  2288                           
  2289  007B                     ??_localtime:	
  2290                           ; 0 bytes @ 0xB
  2291                           
  2292  007B                     ??_asctime:	
  2293                           ; 0 bytes @ 0xB
  2294                           
  2295                           
  2296                           	psect	cstackBANK0
  2297  0053                     __pcstackBANK0:	
  2298                           ; 0 bytes @ 0xB
  2299                           
  2300  0053                     ?_put2d:	
  2301  0053                     put2d@i:	
  2302                           ; 2 bytes @ 0x0
  2303                           
  2304  0053                     ___almod@counter:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307  0053                     ___aldiv@counter:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310                           
  2311                           ; 1 bytes @ 0x0
  2312  0053                     	ds	1
  2313  0054                     put2d@cl:	
  2314  0054                     ___almod@sign:	
  2315                           ; 1 bytes @ 0x1
  2316                           
  2317  0054                     ___aldiv@sign:	
  2318                           ; 1 bytes @ 0x1
  2319                           
  2320                           
  2321                           ; 1 bytes @ 0x1
  2322  0054                     	ds	1
  2323  0055                     put2d@ct:	
  2324  0055                     ___aldiv@quotient:	
  2325                           ; 1 bytes @ 0x2
  2326                           
  2327                           
  2328                           ; 4 bytes @ 0x2
  2329  0055                     	ds	1
  2330  0056                     asctime@s:	
  2331                           
  2332                           ; 1 bytes @ 0x3
  2333  0056                     	ds	1
  2334  0057                     asctime@tim:	
  2335                           
  2336                           ; 1 bytes @ 0x4
  2337  0057                     	ds	1
  2338  0058                     asctime@cp:	
  2339                           
  2340                           ; 1 bytes @ 0x5
  2341  0058                     	ds	1
  2342  0059                     gmtime@tp:	
  2343                           
  2344                           ; 1 bytes @ 0x6
  2345  0059                     	ds	1
  2346  005A                     gmtime@tc:	
  2347                           
  2348                           ; 4 bytes @ 0x7
  2349  005A                     	ds	4
  2350  005E                     localtime@tp:	
  2351                           
  2352                           ; 1 bytes @ 0xB
  2353  005E                     	ds	1
  2354  005F                     localtime@t:	
  2355                           
  2356                           ; 4 bytes @ 0xC
  2357  005F                     	ds	4
  2358  0063                     ctime@tp:	
  2359                           
  2360                           ; 1 bytes @ 0x10
  2361  0063                     	ds	1
  2362                           
  2363                           	psect	intentry
  2364  0004                     __pintentry:	
  2365 ;; *************** function _isr *****************
  2366 ;; Defined at:
  2367 ;;		line 151 in file "D:\_creatiff\_Projects\pic16f1509\fw\main.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  bufer           1    1[COMMON] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;		None               void
  2374 ;; Registers used:
  2375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 1F/0
  2379 ;;		Unchanged: FFFE0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2381 ;;      Params:         0       0       0       0       0       0       0       0
  2382 ;;      Locals:         1       0       0       0       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0       0       0       0
  2384 ;;      Totals:         1       0       0       0       0       0       0       0
  2385 ;;Total ram usage:        1 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    1
  2388 ;; This function calls:
  2389 ;;		_term
  2390 ;; This function is called by:
  2391 ;;		Interrupt level 1
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395  0004                     _isr:	
  2396                           
  2397                           ; Regs used in _isr: [wreg-status,0+pclath+cstack]
  2398  0004  3180               	pagesel	$
  2399                           
  2400                           ;main.c: 157: }
  2401                           ;main.c: 159: if(TXIF)
  2402                           
  2403                           ;main.c: 152: unsigned char bufer;
  2404                           ;main.c: 153: if(ADIF)
  2405                           ;main.c: 154: {
  2406  0005  0020               	movlb	0	; select bank0
  2407  0006  1E11               	btfss	17,4	;volatile
  2408  0007  281F               	goto	i1l1843
  2409                           
  2410                           ;main.c: 160: {
  2411                           ;main.c: 161: TXIF=0;
  2412  0008  1211               	bcf	17,4	;volatile
  2413                           
  2414                           ;main.c: 162: if(txbufer[txpos]!='\0')
  2415  0009  0821               	movf	_txpos,w
  2416  000A  3EBE               	addlw	_txbufer& (0+255)
  2417  000B  0086               	movwf	6
  2418  000C  0187               	clrf	7
  2419  000D  0801               	movf	1,w
  2420  000E  3A00               	xorlw	0
  2421  000F  1903               	skipnz
  2422  0010  281E               	goto	i1l1841
  2423                           
  2424                           ;main.c: 163: {
  2425                           ;main.c: 164: TXREG=txbufer[txpos];
  2426  0011  0821               	movf	_txpos,w
  2427  0012  3EBE               	addlw	_txbufer& (0+255)
  2428  0013  0086               	movwf	6
  2429  0014  0801               	movf	1,w
  2430  0015  0023               	movlb	3	; select bank3
  2431  0016  009A               	movwf	26	;volatile
  2432                           
  2433                           ;main.c: 165: txbufer[txpos]='\0';
  2434  0017  0020               	movlb	0	; select bank0
  2435  0018  0821               	movf	_txpos,w
  2436  0019  3EBE               	addlw	_txbufer& (0+255)
  2437  001A  0086               	movwf	6
  2438  001B  0181               	clrf	1
  2439                           
  2440                           ;main.c: 166: ++txpos;
  2441  001C  0AA1               	incf	_txpos,f
  2442                           
  2443                           ;main.c: 167: }
  2444  001D  281F               	goto	i1l1843
  2445  001E                     i1l1841:	
  2446                           
  2447                           ;main.c: 168: else
  2448                           ;main.c: 169: {
  2449                           ;main.c: 170: txpos=0;
  2450  001E  01A1               	clrf	_txpos
  2451  001F                     i1l1843:	
  2452                           
  2453                           ;main.c: 171: }
  2454                           ;main.c: 172: }
  2455                           ;main.c: 174: if(RCIF)
  2456  001F  1E91               	btfss	17,5	;volatile
  2457  0020  2829               	goto	i1l1851
  2458                           
  2459                           ;main.c: 175: {
  2460                           ;main.c: 176: RCIF=0;
  2461  0021  1291               	bcf	17,5	;volatile
  2462                           
  2463                           ;main.c: 177: bufer=RCREG;
  2464  0022  0023               	movlb	3	; select bank3
  2465  0023  0819               	movf	25,w	;volatile
  2466  0024  00F1               	movwf	isr@bufer
  2467                           
  2468                           ;main.c: 178: term(bufer);
  2469  0025  0871               	movf	isr@bufer,w
  2470  0026  3184  246D  3180   	fcall	_term
  2471  0029                     i1l1851:	
  2472                           
  2473                           ;main.c: 179: }
  2474                           ;main.c: 181: if(CLC1IF&&CLC1IE)
  2475  0029  1C13               	btfss	19,0	;volatile
  2476  002A  2830               	goto	i1l125
  2477  002B  0021               	movlb	1	; select bank1
  2478  002C  1C13               	btfss	19,0	;volatile
  2479  002D  2830               	goto	i1l125
  2480                           
  2481                           ;main.c: 182: {
  2482                           ;main.c: 184: CLC1IF=0;
  2483  002E  0020               	movlb	0	; select bank0
  2484  002F  1013               	bcf	19,0	;volatile
  2485  0030                     i1l125:	
  2486                           
  2487                           ;main.c: 185: }
  2488                           ;main.c: 188: if(TMR1IF)
  2489  0030  0020               	movlb	0	; select bank0
  2490  0031  1C11               	btfss	17,0	;volatile
  2491  0032  283E               	goto	i1l1865
  2492                           
  2493                           ;main.c: 189: {
  2494                           ;main.c: 191: TMR1IF=0;
  2495  0033  1011               	bcf	17,0	;volatile
  2496                           
  2497                           ;main.c: 192: TMR1L=0x00;
  2498  0034  0196               	clrf	22	;volatile
  2499                           
  2500                           ;main.c: 193: TMR1H=0x7F;
  2501  0035  307F               	movlw	127
  2502  0036  0097               	movwf	23	;volatile
  2503                           
  2504                           ;main.c: 194: unixtime++;
  2505  0037  0ACF               	incf	_unixtime,f
  2506  0038  1903               	skipnz
  2507  0039  0AD0               	incf	_unixtime+1,f
  2508  003A  1903               	skipnz
  2509  003B  0AD1               	incf	_unixtime+2,f
  2510  003C  1903               	skipnz
  2511  003D  0AD2               	incf	_unixtime+3,f
  2512  003E                     i1l1865:	
  2513                           
  2514                           ;main.c: 195: }
  2515                           ;main.c: 199: if(T0IF)
  2516  003E  1D0B               	btfss	11,2	;volatile
  2517  003F  0009               	retfie
  2518                           
  2519                           ;main.c: 200: {
  2520                           ;main.c: 201: if(!t_active)
  2521  0040  187B               	btfsc	_t_active/(0+8),_t_active& (0+7)
  2522  0041  2849               	goto	i1l1875
  2523                           
  2524                           ;main.c: 202: {
  2525                           ;main.c: 203: if(st<3)st++;
  2526  0042  3003               	movlw	3
  2527  0043  0220               	subwf	_st,w
  2528  0044  1803               	skipnc
  2529  0045  2848               	goto	i1l1873
  2530  0046  0AA0               	incf	_st,f
  2531  0047  2849               	goto	i1l1875
  2532  0048                     i1l1873:	
  2533                           
  2534                           ;main.c: 204: else st=0;
  2535  0048  01A0               	clrf	_st
  2536  0049                     i1l1875:	
  2537                           
  2538                           ;main.c: 205: }
  2539                           ;main.c: 206: T0IF=0;
  2540  0049  110B               	bcf	11,2	;volatile
  2541  004A  0009               	retfie
  2542  004B                     __end_of_isr:	
  2543                           
  2544                           	psect	text404
  2545  046D                     __ptext404:	
  2546 ;; *************** function _term *****************
  2547 ;; Defined at:
  2548 ;;		line 213 in file "D:\_creatiff\_Projects\pic16f1509\fw\main.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  t               1    wreg     unsigned char 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  t               1    0[COMMON] unsigned char 
  2553 ;; Return value:  Size  Location     Type
  2554 ;;		None               void
  2555 ;; Registers used:
  2556 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2557 ;; Tracked objects:
  2558 ;;		On entry : 1F/3
  2559 ;;		On exit  : 1F/0
  2560 ;;		Unchanged: FFFE0/0
  2561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2562 ;;      Params:         0       0       0       0       0       0       0       0
  2563 ;;      Locals:         1       0       0       0       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0       0       0       0
  2565 ;;      Totals:         1       0       0       0       0       0       0       0
  2566 ;;Total ram usage:        1 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_isr
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           
  2576                           ;psect for function _term
  2577  046D                     _term:	
  2578                           
  2579                           ; Regs used in _term: [wreg-fsr0h+status,2+status,0]
  2580                           ;term@t stored from wreg
  2581  046D  00F0               	movwf	term@t
  2582                           
  2583                           ;main.c: 215: switch(t)
  2584  046E  2C7F               	goto	i1l1449
  2585  046F                     i1l1441:	
  2586                           
  2587                           ;main.c: 218: txbufer[0]='\n';
  2588  046F  300A               	movlw	10
  2589  0470  0021               	movlb	1	; select bank1
  2590  0471  00BE               	movwf	_txbufer^(0+128)
  2591                           
  2592                           ;main.c: 219: txbufer[1]='\r';
  2593  0472  300D               	movlw	13
  2594  0473  00BF               	movwf	(_txbufer^(0+128)+1)
  2595                           
  2596                           ;main.c: 220: txbufer[2]='>';
  2597  0474  303E               	movlw	62
  2598  0475  00C0               	movwf	(_txbufer^(0+128)+2)
  2599                           
  2600                           ;main.c: 221: break;
  2601  0476  2C87               	goto	i1l1451
  2602  0477                     i1l1443:	
  2603                           
  2604                           ;main.c: 224: txpos=0;
  2605  0477  0020               	movlb	0	; select bank0
  2606  0478  01A1               	clrf	_txpos
  2607                           
  2608                           ;main.c: 238: st=0;
  2609  0479  01A0               	clrf	_st
  2610                           
  2611                           ;main.c: 239: break;
  2612  047A  2C87               	goto	i1l1451
  2613  047B                     i1l1445:	
  2614                           
  2615                           ;main.c: 243: txbufer[0]=t;
  2616  047B  0870               	movf	term@t,w
  2617  047C  0021               	movlb	1	; select bank1
  2618  047D  00BE               	movwf	_txbufer^(0+128)
  2619                           
  2620                           ;main.c: 244: break;
  2621  047E  2C87               	goto	i1l1451
  2622  047F                     i1l1449:	
  2623  047F  0870               	movf	term@t,w
  2624                           
  2625                           ; Switch size 1, requested type "space"
  2626                           ; Number of cases is 2, Range of values is 13 to 97
  2627                           ; switch strategies available:
  2628                           ; Name         Instructions Cycles
  2629                           ; simple_byte            7     4 (average)
  2630                           ; direct_byte          179     9 (fixed)
  2631                           ; jumptable            263     9 (fixed)
  2632                           ;	Chosen strategy is simple_byte
  2633  0480  3A0D               	xorlw	13	; case 13
  2634  0481  1903               	skipnz
  2635  0482  2C6F               	goto	i1l1441
  2636  0483  3A6C               	xorlw	108	; case 97
  2637  0484  1903               	skipnz
  2638  0485  2C77               	goto	i1l1443
  2639  0486  2C7B               	goto	i1l1445
  2640  0487                     i1l1451:	
  2641                           
  2642                           ;main.c: 246: TXREG=txbufer[0];
  2643  0487  0021               	movlb	1	; select bank1
  2644  0488  083E               	movf	_txbufer^(0+128),w
  2645  0489  0023               	movlb	3	; select bank3
  2646  048A  009A               	movwf	26	;volatile
  2647                           
  2648                           ;main.c: 247: txbufer[0]='\0';
  2649  048B  0021               	movlb	1	; select bank1
  2650  048C  01BE               	clrf	_txbufer^(0+128)
  2651                           
  2652                           ;main.c: 248: txpos++;
  2653  048D  0020               	movlb	0	; select bank0
  2654  048E  0AA1               	incf	_txpos,f
  2655  048F  0008               	return
  2656  0490                     __end_of_term:	
  2657                           
  2658                           	psect	text405
  2659  0000                     __ptext405:	
  2660                           
  2661                           ;psect for function _term
  2662  007E                     btemp	set	126	;btemp
  2663  007E                     wtemp0	set	126


Data Sizes:
    Strings     59
    Constant    12
    Data        0
    BSS         111
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     17      68
    BANK1            80      0      60
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ?_asctime	PTR unsigned char  size(1) Largest target is 27
		 -> asctime@buf(BANK0[27]), 

    ?___awdiv	int  size(1) Largest target is 0

    ?___awmod	int  size(1) Largest target is 0

    ?___aldiv	long  size(1) Largest target is 0

    ?___almod	long  size(1) Largest target is 0

    ?_localtime	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK0[18]), 

    ?_gmtime	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK0[18]), 

    ?___lwmod	unsigned int  size(1) Largest target is 0

    ?_ctime	PTR unsigned char  size(1) Largest target is 27
		 -> asctime@buf(BANK0[27]), 

    ctime@tp	PTR const long  size(1) Largest target is 4
		 -> unixtime(BANK0[4]), 

    sp__asctime	PTR unsigned char  size(1) Largest target is 27
		 -> asctime@buf(BANK0[27]), 

    asctime@cp	PTR unsigned char  size(1) Largest target is 27
		 -> asctime@buf(BANK0[27]), 

    asctime@tim	PTR const struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK0[18]), 

    asctime@s	PTR const unsigned char  size(1) Largest target is 37
		 -> STR_2(CODE[37]), STR_1(CODE[22]), 

    gmtime@tp	PTR const long  size(1) Largest target is 4
		 -> localtime@t(BANK0[4]), 

    sp__localtime	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK0[18]), 

    sp__gmtime	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK0[18]), 

    localtime@tp	PTR const long  size(1) Largest target is 4
		 -> unixtime(BANK0[4]), 

    put2d@cp	PTR unsigned char  size(1) Largest target is 27
		 -> asctime@buf(BANK0[27]), 

    sp__ctime	PTR unsigned char  size(1) Largest target is 27
		 -> asctime@buf(BANK0[27]), 

    utime	PTR unsigned char  size(1) Largest target is 27
		 -> NULL(NULL[0]), asctime@buf(BANK0[27]), 


Critical Paths under _main in COMMON

    _localtime->_gmtime
    _gmtime->___almod
    _gmtime->___aldiv
    _dylen->___lwmod
    _asctime->_put2d
    _put2d->___awdiv

Critical Paths under _isr in COMMON

    _isr->_term

Critical Paths under _main in BANK0

    _main->_ctime
    _ctime->_localtime
    _localtime->_gmtime
    _gmtime->___aldiv
    _asctime->_put2d

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3373
                              _ctime
 ---------------------------------------------------------------------------------
 (1) _ctime                                                1     1      0    3373
                                             16 BANK0      1     1      0
                          _localtime
                            _asctime
 ---------------------------------------------------------------------------------
 (2) _localtime                                            5     5      0    1659
                                             11 BANK0      5     5      0
                             _gmtime
 ---------------------------------------------------------------------------------
 (3) _gmtime                                               6     6      0    1591
                                             10 COMMON     1     1      0
                                              6 BANK0      5     5      0
                            ___almod
                            ___aldiv
                            ___awmod
                              _dylen
 ---------------------------------------------------------------------------------
 (4) _dylen                                                2     0      2     225
                                              7 COMMON     2     0      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _asctime                                              3     3      0    1683
                                              3 BANK0      3     3      0
                             ___bmul
                              _put2d
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _put2d                                                4     1      3     520
                                             10 COMMON     1     1      0
                                              0 BANK0      3     0      3
                            ___lbmod
                            ___lbdiv
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1      92
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     159
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     162
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              5     4      1     159
                                              2 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     300
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     433
                                              2 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     300
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     296
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  1     1      0      67
                                              1 COMMON     1     1      0
                               _term
 ---------------------------------------------------------------------------------
 (7) _term                                                 1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ctime
     _localtime
       _gmtime
         ___almod
         ___aldiv
         ___awmod
         _dylen
           ___lwmod
     _asctime
       ___bmul
       _put2d
         ___lbmod
         ___lbdiv
         ___awdiv (ARG)
         ___awmod (ARG)
       ___awdiv
       ___awmod

 _isr (ROOT)
   _term

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       9       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      8C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     11      44       6       85.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      3C       8       75.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      95      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.12 build 49521 
Symbol Table                                                                                   Thu May 16 13:40:26 2013

         ___bmul@product 0073                       PL2 03F9                       PL4 0406  
                     PL6 0238                       PL8 0413             ___awdiv@sign 0077  
                     _st 0020                      PL10 0240                      PL12 0246  
                    PL14 041C                      PL16 0421                      l110 00A4  
                    l221 021E                      l109 00A9                      l167 02C6  
                    l373 0363                      l386 02F7                      _GIE 005F  
                    _PS0 04A8                      _PS1 04A9                      _PS2 04AA  
                    u715 03EA                      _PSA 04AB                      u775 0202  
                    u865 01E3                      _isr 0004             ___awmod@sign 0077  
                    wreg 0009                     l2011 0370                     l2031 03AB  
                   l2023 0397                     l2019 037F                     l2027 039D  
                   l1613 03E4                     l1621 03F4                     l1711 01EA  
                   l1703 01DB                     l1631 0219                     l1641 0226  
                   l1617 03F0                     l1465 016F                     l1473 03D5  
                   l1803 018C                     l1715 01EE                     l1661 020F  
                   l1653 01FF                     l1645 0229                     l1477 03D7  
                   l1815 019E                     l1823 01AE                     l1807 0193  
                   l1719 01F6                     l1591 0178                     l1921 0088  
                   l1827 01B6                     l1819 01AA                     l1765 0306  
                   l1693 01CE                     l1791 034A                     l1783 0336  
                   l1775 0319                     l1687 01C5                     l1919 007F  
                   l1787 033C                     l1947 00A9                     l1981 029B  
                   l1983 02B8                     l1997 02E2                     _ADIF 008E  
                   ?_isr 0070                     STR_1 0457                     STR_2 0432  
                   _BRGH 0CF2                     _T0IE 005D                     _CREN 0CEC  
                   _T0IF 005A                     _T0CS 04AD                     u1005 032B  
                   u1205 02A9                     u1215 02D6                     u1075 01A4  
                   u1265 038D                     _PEIE 005E                     _RCIE 048D  
                   _RCIF 008D                     _SPEN 0CEF                     _TXIE 048C  
                   _TXEN 0CF5                     _TXIF 008C                     _SYNC 0CF4  
                   _main 0060                     _term 046D                     fsr0h 0005  
                   fsr1h 0007                     fsr0l 0004                     indf0 0000  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   start 004B        ___bmul@multiplier 0074                    ??_isr 0071  
        __end_of___aldiv 0353          __end_of___almod 03B4                    ?_main 0070  
        __end_of___awdiv 01FB          __end_of___lbdiv 022B                    _BRG16 0CFB  
        __end_of___awmod 01BB          __end_of___lbmod 0213                    ?_term 0070  
        ___awdiv@divisor 0072                    _T1CON 0018                    i1l125 0030  
        __end_of___lwmod 03F9          ___awdiv@counter 0076                    _RCREG 0199  
                  _TMR1H 0017                    _TMR1L 0016                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    _TXREG 019A  
        __end_of_asctime 014F                    _ctime 00B9                    _dylen 03B4  
                  _put2d 014F                    _txpos 0021           __pbitbssCOMMON 03D8  
        __end_of_moninit 0432                    term@t 0070                    status 0003  
                  wtemp0 007E          ___lbdiv@divisor 0072          ___lbdiv@counter 0074  
        __initialization 004D             __end_of_main 00B9             __end_of_term 0490  
                 ??_main 007B                   ??_term 0070                   _ADCON0 009D  
                 _ADCON1 009E                   ?_ctime 0070                   ?_dylen 0077  
                 _CLC1IE 0498                   _CLC1IF 0098                   ?_put2d 0053  
       ___awdiv@dividend 0074                   _ANSELA 018C                   i1l1441 046F  
                 i1l1443 0477                   i1l1451 0487                   i1l1445 047B  
                 i1l1449 047F                   i1l1841 001E                   i1l1851 0029  
                 i1l1843 001F                   i1l1873 0048                   i1l1865 003E  
                 i1l1875 0049                   _FVRCON 0117                   _TMR1IE 0488  
                 _TMR1IF 0088                   _SPBRGH 019C                   _SPBRGL 019B  
                 ___bmul 0176                ??___aldiv 007A                ??___almod 007A  
              ??___awdiv 0076                ??___lbdiv 0073                ??___awmod 0076  
              ??___lbmod 0073                ??___lwmod 0076                   _gmtime 024C  
       ___awdiv@quotient 0078          ___awmod@divisor 0072          ___awmod@counter 0076  
              ??_asctime 007B                   clrloop 0491                   put2d@i 0053  
       ___lbdiv@dividend 0073              localtime@tp 005E          ___lbmod@divisor 0072  
__end_of__initialization 005E          ___lbmod@counter 0075      ___bmul@multiplicand 0072  
         __pcstackCOMMON 0070            __end_of_ctime 00BE            __end_of_dylen 03D9  
          __end_of_put2d 0176               __end_ofPL2 0406               __end_ofPL4 0413  
             __end_ofPL6 0240               __end_ofPL8 041C         ___lbdiv@quotient 0075  
                ??_ctime 007B                  ??_dylen 0079                  ??_put2d 007A  
             __pbssBANK0 0020               __pbssBANK1 00A0       __size_of_localtime 000D  
             __pmaintext 0060                  ?___bmul 0072               __pintentry 0004  
                _CM1CON0 0111                  ?_gmtime 0070               __stringtab 0425  
                ___aldiv 02E7          __size_of___bmul 000C                  ___almod 0353  
                ___awdiv 01BB                  ___lbdiv 0213                  ___awmod 0182  
                ___lbmod 01FB                  ___lwmod 03D9          __size_of_gmtime 009B  
                _asctime 00BE             __size_of_isr 0047         ___awmod@dividend 0074  
       ___aldiv@dividend 0076        __end_of_localtime 0238                  _moninit 0426  
                _rxbufer 00A0                  ctime@tp 0063                  _txbufer 00BE  
   end_of_initialization 005E                  dylen@yr 0077                  put2d@cl 0054  
                put2d@cp 007A                  put2d@ct 0055         ___aldiv@quotient 0055  
       ___lbmod@dividend 0074               asctime@buf 0022               asctime@tim 0057  
            ___lbmod@rem 0076           __end_of___bmul 0182           __end_of_gmtime 02E7  
            __end_ofPL10 0246              __end_ofPL12 024C              __end_ofPL14 0421  
            __end_ofPL16 0425      start_initialization 004D              __end_of_isr 004B  
               ??___bmul 0073                 ??_gmtime 007A               localtime@t 005F  
          __pcstackBANK0 0053      __end_of__stringdata 046D                 ?___aldiv 0072  
               ?___almod 0072                 ?___awdiv 0072                 ?___lbdiv 0072  
              __ptext400 0353                __ptext401 02E7                __ptext402 0182  
              __ptext404 046D                __ptext405 0000                 ?___awmod 0072  
              __ptext390 022B                __ptext391 024C                __ptext392 03B4  
              __ptext393 00BE                __ptext394 014F                __ptext395 0176  
               ?___lbmod 0072                __ptext396 03D9                __ptext397 0213  
              __ptext389 00B9                __ptext398 01FB                __ptext399 01BB  
               ?___lwmod 0072         ___almod@dividend 0076                __pstrings 0425  
               ?_asctime 0070           __size_of_ctime 0005           __size_of_dylen 0025  
         __size_of_put2d 0027                _localtime 022B          ___aldiv@divisor 0072  
        ___aldiv@counter 0053                asctime@cp 0058              __stringdata 0432  
             ?_localtime 0070                gmtime@tim 003D         __size_of___aldiv 006C  
       __size_of___almod 0061         __size_of___awdiv 0040         __size_of___lbdiv 0018  
       __size_of___awmod 0039         __size_of___lbmod 0018         __size_of___lwmod 0020  
     __end_of__stringtab 0426         __size_of_asctime 0091          ___almod@divisor 0072  
        ___almod@counter 0053            __size_of_main 0059            __size_of_term 0023  
               _t_active 03D8                 clear_ram 0490                 asctime@s 0056  
               _unixtime 004F                 isr@bufer 0071                 gmtime@tc 005A  
               gmtime@tp 0059              ??_localtime 007B                 intlevel1 0000  
       ___lwmod@dividend 0074          ___lwmod@divisor 0072          ___lwmod@counter 0076  
           ___aldiv@sign 0054             ___almod@sign 0054  
